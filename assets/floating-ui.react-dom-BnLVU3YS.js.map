{"version":3,"file":"floating-ui.react-dom-BnLVU3YS.js","sources":["../../node_modules/@radix-ui/react-collection/dist/index.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"],"sourcesContent":["\"use client\";\n\n// src/collection-legacy.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createCollection(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }\n  );\n  const CollectionProvider = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef(null);\n    const itemMap = React.useRef(/* @__PURE__ */ new Map()).current;\n    return /* @__PURE__ */ jsx(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...itemData });\n        return () => void context.itemMap.delete(ref);\n      });\n      return /* @__PURE__ */ jsx(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useCollection(scope) {\n    const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n    return getItems;\n  }\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope\n  ];\n}\n\n// src/collection.tsx\nimport React2 from \"react\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createSlot as createSlot2 } from \"@radix-ui/react-slot\";\n\n// src/ordered-dictionary.ts\nvar __instanciated = /* @__PURE__ */ new WeakMap();\nvar OrderedDict = class _OrderedDict extends Map {\n  #keys;\n  constructor(entries) {\n    super(entries);\n    this.#keys = [...super.keys()];\n    __instanciated.set(this, true);\n  }\n  set(key, value) {\n    if (__instanciated.get(this)) {\n      if (this.has(key)) {\n        this.#keys[this.#keys.indexOf(key)] = key;\n      } else {\n        this.#keys.push(key);\n      }\n    }\n    super.set(key, value);\n    return this;\n  }\n  insert(index, key, value) {\n    const has = this.has(key);\n    const length = this.#keys.length;\n    const relativeIndex = toSafeInteger(index);\n    let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n    if (safeIndex === this.size || has && safeIndex === this.size - 1 || safeIndex === -1) {\n      this.set(key, value);\n      return this;\n    }\n    const size = this.size + (has ? 0 : 1);\n    if (relativeIndex < 0) {\n      actualIndex++;\n    }\n    const keys = [...this.#keys];\n    let nextValue;\n    let shouldSkip = false;\n    for (let i = actualIndex; i < size; i++) {\n      if (actualIndex === i) {\n        let nextKey = keys[i];\n        if (keys[i] === key) {\n          nextKey = keys[i + 1];\n        }\n        if (has) {\n          this.delete(key);\n        }\n        nextValue = this.get(nextKey);\n        this.set(key, value);\n      } else {\n        if (!shouldSkip && keys[i - 1] === key) {\n          shouldSkip = true;\n        }\n        const currentKey = keys[shouldSkip ? i : i - 1];\n        const currentValue = nextValue;\n        nextValue = this.get(currentKey);\n        this.delete(currentKey);\n        this.set(currentKey, currentValue);\n      }\n    }\n    return this;\n  }\n  with(index, key, value) {\n    const copy = new _OrderedDict(this);\n    copy.insert(index, key, value);\n    return copy;\n  }\n  before(key) {\n    const index = this.#keys.indexOf(key) - 1;\n    if (index < 0) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position before the given key.\n   */\n  setBefore(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index, newKey, value);\n  }\n  after(key) {\n    let index = this.#keys.indexOf(key);\n    index = index === -1 || index === this.size - 1 ? -1 : index + 1;\n    if (index === -1) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position after the given key.\n   */\n  setAfter(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index + 1, newKey, value);\n  }\n  first() {\n    return this.entryAt(0);\n  }\n  last() {\n    return this.entryAt(-1);\n  }\n  clear() {\n    this.#keys = [];\n    return super.clear();\n  }\n  delete(key) {\n    const deleted = super.delete(key);\n    if (deleted) {\n      this.#keys.splice(this.#keys.indexOf(key), 1);\n    }\n    return deleted;\n  }\n  deleteAt(index) {\n    const key = this.keyAt(index);\n    if (key !== void 0) {\n      return this.delete(key);\n    }\n    return false;\n  }\n  at(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return this.get(key);\n    }\n  }\n  entryAt(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return [key, this.get(key)];\n    }\n  }\n  indexOf(key) {\n    return this.#keys.indexOf(key);\n  }\n  keyAt(index) {\n    return at(this.#keys, index);\n  }\n  from(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.at(dest);\n  }\n  keyFrom(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.keyAt(dest);\n  }\n  find(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return entry;\n      }\n      index++;\n    }\n    return void 0;\n  }\n  findIndex(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }\n  filter(predicate, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        entries.push(entry);\n      }\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  map(callbackfn, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      entries.push([entry[0], Reflect.apply(callbackfn, thisArg, [entry, index, this])]);\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  reduce(...args) {\n    const [callbackfn, initialValue] = args;\n    let index = 0;\n    let accumulator = initialValue ?? this.at(0);\n    for (const entry of this) {\n      if (index === 0 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n      index++;\n    }\n    return accumulator;\n  }\n  reduceRight(...args) {\n    const [callbackfn, initialValue] = args;\n    let accumulator = initialValue ?? this.at(-1);\n    for (let index = this.size - 1; index >= 0; index--) {\n      const entry = this.at(index);\n      if (index === this.size - 1 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n    }\n    return accumulator;\n  }\n  toSorted(compareFn) {\n    const entries = [...this.entries()].sort(compareFn);\n    return new _OrderedDict(entries);\n  }\n  toReversed() {\n    const reversed = new _OrderedDict();\n    for (let index = this.size - 1; index >= 0; index--) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      reversed.set(key, element);\n    }\n    return reversed;\n  }\n  toSpliced(...args) {\n    const entries = [...this.entries()];\n    entries.splice(...args);\n    return new _OrderedDict(entries);\n  }\n  slice(start, end) {\n    const result = new _OrderedDict();\n    let stop = this.size - 1;\n    if (start === void 0) {\n      return result;\n    }\n    if (start < 0) {\n      start = start + this.size;\n    }\n    if (end !== void 0 && end > 0) {\n      stop = end - 1;\n    }\n    for (let index = start; index <= stop; index++) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      result.set(key, element);\n    }\n    return result;\n  }\n  every(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (!Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return false;\n      }\n      index++;\n    }\n    return true;\n  }\n  some(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return true;\n      }\n      index++;\n    }\n    return false;\n  }\n};\nfunction at(array, index) {\n  if (\"at\" in Array.prototype) {\n    return Array.prototype.at.call(array, index);\n  }\n  const actualIndex = toSafeIndex(array, index);\n  return actualIndex === -1 ? void 0 : array[actualIndex];\n}\nfunction toSafeIndex(array, index) {\n  const length = array.length;\n  const relativeIndex = toSafeInteger(index);\n  const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n  return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n}\nfunction toSafeInteger(number) {\n  return number !== number || number === 0 ? 0 : Math.trunc(number);\n}\n\n// src/collection.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nfunction createCollection2(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope2(PROVIDER_NAME);\n  const [CollectionContextProvider, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    {\n      collectionElement: null,\n      collectionRef: { current: null },\n      collectionRefObject: { current: null },\n      itemMap: new OrderedDict(),\n      setItemMap: () => void 0\n    }\n  );\n  const CollectionProvider = ({ state, ...props }) => {\n    return state ? /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state }) : /* @__PURE__ */ jsx2(CollectionInit, { ...props });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const CollectionInit = (props) => {\n    const state = useInitCollection();\n    return /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state });\n  };\n  CollectionInit.displayName = PROVIDER_NAME + \"Init\";\n  const CollectionProviderImpl = (props) => {\n    const { scope, children, state } = props;\n    const ref = React2.useRef(null);\n    const [collectionElement, setCollectionElement] = React2.useState(\n      null\n    );\n    const composeRefs = useComposedRefs2(ref, setCollectionElement);\n    const [itemMap, setItemMap] = state;\n    React2.useEffect(() => {\n      if (!collectionElement) return;\n      const observer = getChildListObserver(() => {\n      });\n      observer.observe(collectionElement, {\n        childList: true,\n        subtree: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }, [collectionElement]);\n    return /* @__PURE__ */ jsx2(\n      CollectionContextProvider,\n      {\n        scope,\n        itemMap,\n        setItemMap,\n        collectionRef: composeRefs,\n        collectionRefObject: ref,\n        collectionElement,\n        children\n      }\n    );\n  };\n  CollectionProviderImpl.displayName = PROVIDER_NAME + \"Impl\";\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot2(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs2(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx2(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot2(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React2.useRef(null);\n      const [element, setElement] = React2.useState(null);\n      const composedRefs = useComposedRefs2(forwardedRef, ref, setElement);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      const { setItemMap } = context;\n      const itemDataRef = React2.useRef(itemData);\n      if (!shallowEqual(itemDataRef.current, itemData)) {\n        itemDataRef.current = itemData;\n      }\n      const memoizedItemData = itemDataRef.current;\n      React2.useEffect(() => {\n        const itemData2 = memoizedItemData;\n        setItemMap((map) => {\n          if (!element) {\n            return map;\n          }\n          if (!map.has(element)) {\n            map.set(element, { ...itemData2, element });\n            return map.toSorted(sortByDocumentPosition);\n          }\n          return map.set(element, { ...itemData2, element }).toSorted(sortByDocumentPosition);\n        });\n        return () => {\n          setItemMap((map) => {\n            if (!element || !map.has(element)) {\n              return map;\n            }\n            map.delete(element);\n            return new OrderedDict(map);\n          });\n        };\n      }, [element, memoizedItemData, setItemMap]);\n      return /* @__PURE__ */ jsx2(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useInitCollection() {\n    return React2.useState(new OrderedDict());\n  }\n  function useCollection(scope) {\n    const { itemMap } = useCollectionContext(name + \"CollectionConsumer\", scope);\n    return itemMap;\n  }\n  const functions = {\n    createCollectionScope,\n    useCollection,\n    useInitCollection\n  };\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    functions\n  ];\n}\nfunction shallowEqual(a, b) {\n  if (a === b) return true;\n  if (typeof a !== \"object\" || typeof b !== \"object\") return false;\n  if (a == null || b == null) return false;\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    if (a[key] !== b[key]) return false;\n  }\n  return true;\n}\nfunction isElementPreceding(a, b) {\n  return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);\n}\nfunction sortByDocumentPosition(a, b) {\n  return !a[1].element || !b[1].element ? 0 : isElementPreceding(a[1].element, b[1].element) ? -1 : 1;\n}\nfunction getChildListObserver(callback) {\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        callback();\n        return;\n      }\n    }\n  });\n  return observer;\n}\nexport {\n  createCollection,\n  createCollection2 as unstable_createCollection\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          var _overflowsData$;\n          const ignoreCrossAxisOverflow = checkCrossAxis === 'alignment' ? initialSideAxis !== getSideAxis(nextPlacement) : false;\n          const hasInitialMainAxisOverflow = ((_overflowsData$ = overflowsData[0]) == null ? void 0 : _overflowsData$.overflows[0]) > 0;\n          if (!ignoreCrossAxisOverflow || hasInitialMainAxisOverflow) {\n            // Try next placement and re-run the lifecycle.\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, arrow as arrow$1, autoPlacement as autoPlacement$1, detectOverflow as detectOverflow$1, flip as flip$1, hide as hide$1, inline as inline$1, limitShift as limitShift$1, offset as offset$1, shift as shift$1, size as size$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n\n  // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n  // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n  function setLeftRTLScrollbarOffset() {\n    offsets.x = getWindowScrollBarX(documentElement);\n  }\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      setLeftRTLScrollbarOffset();\n    }\n  }\n  if (isFixed && !isOffsetParentAnElement && documentElement) {\n    setLeftRTLScrollbarOffset();\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (_e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { computePosition, arrow as arrow$2, offset as offset$1, shift as shift$1, limitShift as limitShift$1, flip as flip$1, size as size$1, autoPlacement as autoPlacement$1, hide as hide$1, inline as inline$1 } from '@floating-ui/dom';\nexport { autoUpdate, computePosition, detectOverflow, getOverflowAncestors, platform } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const openRef = useLatestRef(open);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        // The floating element's position may be recomputed while it's closed\n        // but still mounted (such as when transitioning out). To ensure\n        // `isPositioned` will be `false` initially on the next open, avoid\n        // setting it to `true` when `open === false` (must be specified).\n        isPositioned: openRef.current !== false\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef, openRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow$1 = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$2({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$2({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = (options, deps) => ({\n  ...offset$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = (options, deps) => ({\n  ...shift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = (options, deps) => ({\n  ...limitShift$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = (options, deps) => ({\n  ...flip$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = (options, deps) => ({\n  ...size$1(options),\n  options: [options, deps]\n});\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = (options, deps) => ({\n  ...autoPlacement$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = (options, deps) => ({\n  ...hide$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = (options, deps) => ({\n  ...inline$1(options),\n  options: [options, deps]\n});\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = (options, deps) => ({\n  ...arrow$1(options),\n  options: [options, deps]\n});\n\nexport { arrow, autoPlacement, flip, hide, inline, limitShift, offset, shift, size, useFloating };\n"],"names":["createCollection","name","PROVIDER_NAME","createCollectionContext","createCollectionScope","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","props","scope","children","ref","React","useRef","jsx","displayName","COLLECTION_SLOT_NAME","CollectionSlotImpl","createSlot","CollectionSlot","forwardRef","forwardedRef","context","composedRefs","useComposedRefs","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlotImpl","CollectionItemSlot","itemData","useEffect","set","delete","Provider","Slot","ItemSlot","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","values","sort","a","b","indexOf","sides","min","Math","max","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","value","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getOppositeAlignmentPlacement","replace","alignment","getOppositePlacement","side","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","width","height","computeCoordsFromPlacement","_ref","rtl","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","state","options","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","hasWindow","window","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","test","isTableElement","isTopLayer","selector","matches","e","isContainingBlock","elementOrCss","webkit","isWebKit","css","containerType","backdropFilter","filter","willChange","contain","CSS","supports","isLastTraversableNode","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","concat","visualViewport","parent","Object","getPrototypeOf","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","ignoreScrollbarX","htmlRect","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","setLeftRTLScrollbarOffset","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","this","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","isRTL","rectsAreEqual","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","_e","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","shift","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","enabled","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","push","isStart","lr","rl","tb","bt","getSideList","map","getOppositeAxisPlacements","placements","overflows","overflowsData","length","mainAlignmentSide","getAlignmentSides","every","_middlewareData$flip2","_overflowsData$filter","nextIndex","index","nextPlacement","_overflowsData$","ignoreCrossAxisOverflow","hasInitialMainAxisOverflow","reset","resetPlacement","d","_overflowsData$filter2","currentSideAxis","acc","size","_state$middlewareData","_state$middlewareData2","apply","isYAxis","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","computePosition","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","useLayoutEffect","deepEqual","toString","keys","isArray","hasOwnProperty","call","key","$$typeof","getDPR","devicePixelRatio","roundByDPR","dpr","useLatestRef","React.useRef","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","React.useState","isPositioned","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","React.useCallback","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","openRef","then","fullData","isMountedRef","ReactDOM.flushSync","refs","React.useMemo","floatingStyles","initialStyles","useMemo","arrow$1","arrow$2","deps","offset$1","shift$1","limitShift$1","flip$1","size$1","hide$1"],"mappings":"oJAQA,SAASA,EAAiBC,GACxB,MAAMC,EAAgBD,EAAO,sBACtBE,EAAyBC,GAAyBC,EAAmBH,IACrEI,EAAwBC,GAAwBJ,EACrDD,EACA,CAAEM,cAAe,CAAEC,QAAS,MAAQC,QAA6B,IAAAC,MAE7DC,EAAsBC,IACpB,MAAAC,MAAEA,EAAOC,SAAAA,GAAaF,EACtBG,EAAMC,EAAMC,OAAO,MACnBR,EAAUO,EAAMC,OAA2B,IAAAP,KAAOF,QACjCU,OAAAA,EAAGA,IAACb,EAAwB,CAAEQ,QAAOJ,UAASF,cAAeQ,EAAKD,YAAU,EAErGH,EAAmBQ,YAAclB,EACjC,MAAMmB,EAAuBpB,EAAO,iBAC9BqB,EAAqBC,EAAWF,GAChCG,EAAiBP,EAAMQ,YAC3B,CAACZ,EAAOa,KACA,MAAAZ,MAAEA,EAAOC,SAAAA,GAAaF,EACtBc,EAAUpB,EAAqBc,EAAsBP,GACrDc,EAAeC,EAAgBH,EAAcC,EAAQnB,eAC3D,SAAuBW,IAAIG,EAAoB,CAAEN,IAAKY,EAAcb,YAAU,IAGlFS,EAAeJ,YAAcC,EAC7B,MAAMS,EAAiB7B,EAAO,qBACxB8B,EAAiB,6BACjBC,EAAyBT,EAAWO,GACpCG,EAAqBhB,EAAMQ,YAC/B,CAACZ,EAAOa,KACN,MAAMZ,MAAEA,EAAAC,SAAOA,KAAamB,GAAarB,EACnCG,EAAMC,EAAMC,OAAO,MACnBU,EAAeC,EAAgBH,EAAcV,GAC7CW,EAAUpB,EAAqBuB,EAAgBhB,GAKrD,OAJAG,EAAMkB,WAAU,KACdR,EAAQjB,QAAQ0B,IAAIpB,EAAK,CAAEA,SAAQkB,IAC5B,KAAWP,EAAQjB,QAAQ2B,OAAOrB,EAAG,WAEnBgB,EAAwB,CAAOD,CAACA,GAAiB,GAAMf,IAAKY,EAAcb,YAAU,IAkB5G,OAfPkB,EAAmBb,YAAcU,EAe1B,CACL,CAAEQ,SAAU1B,EAAoB2B,KAAMf,EAAgBgB,SAAUP,GAflE,SAAuBnB,GACrB,MAAMa,EAAUpB,EAAqBN,EAAO,qBAAsBa,GAW3D,OAVUG,EAAMwB,aAAY,KAC3B,MAAAC,EAAiBf,EAAQnB,cAAcC,QACzC,IAACiC,EAAgB,MAAO,GACtB,MAAAC,EAAeC,MAAMC,KAAKH,EAAeI,iBAAiB,IAAIf,OAK7D,OAJOa,MAAMC,KAAKlB,EAAQjB,QAAQqC,UACdC,MACzB,CAACC,EAAGC,IAAMP,EAAaQ,QAAQF,EAAEjC,IAAIP,SAAWkC,EAAaQ,QAAQD,EAAElC,IAAIP,UAEtE,GACN,CAACkB,EAAQnB,cAAemB,EAAQjB,SAEvC,EAIIN,EAEJ,CChEA,MAAMgD,EAAQ,CAAC,MAAO,QAAS,SAAU,QAGnCC,EAAMC,KAAKD,IACXE,EAAMD,KAAKC,IACXC,EAAQF,KAAKE,MACbC,EAAQH,KAAKG,MACbC,EAAqBC,IAAA,CACzBC,EAAGD,EACHE,EAAGF,IAECG,EAAkB,CACtBC,KAAM,QACNC,MAAO,OACPC,OAAQ,MACRC,IAAK,UAEDC,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAASC,EAAMF,EAAOG,EAAOF,GAC3B,OAAOd,EAAIa,EAAOf,EAAIkB,EAAOF,GAC/B,CACA,SAASG,EAASD,EAAOE,GACvB,MAAwB,mBAAVF,EAAuBA,EAAME,GAASF,CACtD,CACA,SAASG,EAAQC,GACf,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAASC,EAAaF,GACpB,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAASE,EAAgBC,GAChB,MAAS,MAATA,EAAe,IAAM,GAC9B,CACA,SAASC,EAAcD,GACd,MAAS,MAATA,EAAe,SAAW,OACnC,CACA,SAASE,EAAYN,GACZ,MAAA,CAAC,MAAO,UAAUO,SAASR,EAAQC,IAAc,IAAM,GAChE,CACA,SAASQ,EAAiBR,GACjB,OAAAG,EAAgBG,EAAYN,GACrC,CAkBA,SAASS,EAA8BT,GACrC,OAAOA,EAAUU,QAAQ,cAA2BC,GAAAnB,EAAqBmB,IAC3E,CA6BA,SAASC,EAAqBZ,GAC5B,OAAOA,EAAUU,QAAQ,0BAAkCG,GAAA1B,EAAgB0B,IAC7E,CAUA,SAASC,EAAiBC,GACxB,MAA0B,iBAAZA,EAVhB,SAA6BA,GACpB,MAAA,CACLxB,IAAK,EACLF,MAAO,EACPC,OAAQ,EACRF,KAAM,KACH2B,EAEP,CAEuCC,CAAoBD,GAAW,CAClExB,IAAKwB,EACL1B,MAAO0B,EACPzB,OAAQyB,EACR3B,KAAM2B,EAEV,CACA,SAASE,EAAiBC,GAClB,MAAAjC,EACJA,EAAAC,EACAA,EAAAiC,MACAA,EAAAC,OACAA,GACEF,EACG,MAAA,CACLC,QACAC,SACA7B,IAAKL,EACLE,KAAMH,EACNI,MAAOJ,EAAIkC,EACX7B,OAAQJ,EAAIkC,EACZnC,IACAC,IAEJ,CCpIA,SAASmC,EAA2BC,EAAMtB,EAAWuB,GAC/C,IAAAC,UACFA,EAAAC,SACAA,GACEH,EACE,MAAAI,EAAWpB,EAAYN,GACvB2B,EAAgBnB,EAAiBR,GACjC4B,EAAcvB,EAAcsB,GAC5Bd,EAAOd,EAAQC,GACf6B,EAA0B,MAAbH,EACbI,EAAUN,EAAUvC,EAAIuC,EAAUL,MAAQ,EAAIM,EAASN,MAAQ,EAC/DY,EAAUP,EAAUtC,EAAIsC,EAAUJ,OAAS,EAAIK,EAASL,OAAS,EACjEY,EAAcR,EAAUI,GAAe,EAAIH,EAASG,GAAe,EACrE,IAAAK,EACJ,OAAQpB,GACN,IAAK,MACMoB,EAAA,CACPhD,EAAG6C,EACH5C,EAAGsC,EAAUtC,EAAIuC,EAASL,QAE5B,MACF,IAAK,SACMa,EAAA,CACPhD,EAAG6C,EACH5C,EAAGsC,EAAUtC,EAAIsC,EAAUJ,QAE7B,MACF,IAAK,QACMa,EAAA,CACPhD,EAAGuC,EAAUvC,EAAIuC,EAAUL,MAC3BjC,EAAG6C,GAEL,MACF,IAAK,OACME,EAAA,CACPhD,EAAGuC,EAAUvC,EAAIwC,EAASN,MAC1BjC,EAAG6C,GAEL,MACF,QACWE,EAAA,CACPhD,EAAGuC,EAAUvC,EACbC,EAAGsC,EAAUtC,GAGX,OAAAgB,EAAaF,IACnB,IAAK,QACHiC,EAAON,IAAkBK,GAAeT,GAAOM,GAAkB,EAAA,GACjE,MACF,IAAK,MACHI,EAAON,IAAkBK,GAAeT,GAAOM,GAAkB,EAAA,GAG9D,OAAAI,CACT,CAqGAC,eAAeC,EAAeC,EAAOC,GAC/B,IAAAC,OACY,IAAZD,IACFA,EAAU,CAAE,GAER,MAAApD,EACJA,EAAAC,EACAA,EACAqD,SAAAA,EAAAA,MACAC,EAAAC,SACAA,EAAAC,SACAA,GACEN,GACEO,SACJA,EAAW,oBAAAC,aACXA,EAAe,WAAAC,eACfA,EAAiB,WAAAC,YACjBA,GAAc,EAAA/B,QACdA,EAAU,GACRlB,EAASwC,EAASD,GAChBW,EAAgBjC,EAAiBC,GAEjCiC,EAAUP,EAASK,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CI,EAAqBhC,QAAuBsB,EAASW,gBAAgB,CACzEF,QAAiH,OAAtGV,QAAqD,MAAtBC,EAASY,eAAoB,EAASZ,EAASY,UAAUH,MAAqBV,EAAgCU,EAAUA,EAAQI,sBAAyD,MAA/Bb,EAASc,wBAA6B,EAASd,EAASc,mBAAmBZ,EAAShB,WACxRkB,WACAC,eACAF,cAEIxB,EAA0B,aAAnB2B,EAAgC,CAC3C5D,IACAC,IACAiC,MAAOqB,EAAMf,SAASN,MACtBC,OAAQoB,EAAMf,SAASL,QACrBoB,EAAMhB,UACJ8B,QAAkD,MAA5Bf,EAASgB,qBAA0B,EAAShB,EAASgB,gBAAgBd,EAAShB,WACpG+B,QAA4C,MAAtBjB,EAASY,eAAoB,EAASZ,EAASY,UAAUG,WAA+C,MAArBf,EAASkB,cAAmB,EAASlB,EAASkB,SAASH,KAGlK,CACFrE,EAAG,EACHC,EAAG,GAECwE,EAAoBzC,EAAiBsB,EAASoB,4DAA8DpB,EAASoB,sDAAsD,CAC/KlB,WACAvB,OACAoC,eACAZ,aACGxB,GACE,MAAA,CACL3B,KAAM0D,EAAmB1D,IAAMmE,EAAkBnE,IAAMwD,EAAcxD,KAAOiE,EAAYtE,EACxFI,QAASoE,EAAkBpE,OAAS2D,EAAmB3D,OAASyD,EAAczD,QAAUkE,EAAYtE,EACpGE,MAAO6D,EAAmB7D,KAAOsE,EAAkBtE,KAAO2D,EAAc3D,MAAQoE,EAAYvE,EAC5FI,OAAQqE,EAAkBrE,MAAQ4D,EAAmB5D,MAAQ0D,EAAc1D,OAASmE,EAAYvE,EAEpG,CA8TA,SAAS2E,EAAeC,EAAU3C,GACzB,MAAA,CACL3B,IAAKsE,EAAStE,IAAM2B,EAAKE,OACzB/B,MAAOwE,EAASxE,MAAQ6B,EAAKC,MAC7B7B,OAAQuE,EAASvE,OAAS4B,EAAKE,OAC/BhC,KAAMyE,EAASzE,KAAO8B,EAAKC,MAE/B,CACA,SAAS2C,EAAsBD,GAC7B,OAAOpF,EAAMsF,MAAKlD,GAAQgD,EAAShD,IAAS,GAC9C,CC7hBA,SAASmD,IACP,MAAyB,oBAAXC,MAChB,CACA,SAASC,EAAYC,GACf,OAAAC,EAAOD,IACDA,EAAKE,UAAY,IAAIC,cAKxB,WACT,CACA,SAASC,EAAUJ,GACb,IAAAK,EACI,OAAQ,MAARL,GAA8D,OAA7CK,EAAsBL,EAAKM,oBAAyB,EAASD,EAAoBE,cAAgBT,MAC5H,CACA,SAASZ,EAAmBc,GACtB,IAAA7C,EACJ,OAA0F,OAAlFA,GAAQ8C,EAAOD,GAAQA,EAAKM,cAAgBN,EAAKQ,WAAaV,OAAOU,eAAoB,EAASrD,EAAKsD,eACjH,CACA,SAASR,EAAOxE,GACV,QAACoE,MAGEpE,aAAiBiF,MAAQjF,aAAiB2E,EAAU3E,GAAOiF,KACpE,CACA,SAAS1B,EAAUvD,GACb,QAACoE,MAGEpE,aAAiBkF,SAAWlF,aAAiB2E,EAAU3E,GAAOkF,QACvE,CACA,SAASC,EAAcnF,GACjB,QAACoE,MAGEpE,aAAiBoF,aAAepF,aAAiB2E,EAAU3E,GAAOoF,YAC3E,CACA,SAASC,EAAarF,GACpB,SAAKoE,KAAqC,oBAAfkB,cAGpBtF,aAAiBsF,YAActF,aAAiB2E,EAAU3E,GAAOsF,WAC1E,CACA,SAASC,EAAkBnC,GACnB,MAAAa,SACJA,EAAAuB,UACAA,EAAAC,UACAA,EAAAC,QACAA,GACEC,EAAiBvC,GACrB,MAAO,kCAAkCwC,KAAK3B,EAAWwB,EAAYD,KAAe,CAAC,SAAU,YAAY7E,SAAS+E,EACtH,CACA,SAASG,EAAezC,GACf,MAAA,CAAC,QAAS,KAAM,MAAMzC,SAAS2D,EAAYlB,GACpD,CACA,SAAS0C,EAAW1C,GAClB,MAAO,CAAC,gBAAiB,UAAUe,MAAiB4B,IAC9C,IACK,OAAA3C,EAAQ4C,QAAQD,EACxB,OAAQE,GACA,OAAA,CACb,IAEA,CACA,SAASC,EAAkBC,GACzB,MAAMC,EAASC,IACTC,EAAM/C,EAAU4C,GAAgBR,EAAiBQ,GAAgBA,EAIvE,MAAO,CAAC,YAAa,YAAa,QAAS,SAAU,eAAehC,MAAKnE,KAASsG,EAAItG,IAAwB,SAAfsG,EAAItG,QAA+BsG,EAAIC,eAAsC,WAAtBD,EAAIC,gBAAwCH,KAAWE,EAAIE,gBAAwC,SAAvBF,EAAIE,iBAAuCJ,KAAWE,EAAIG,QAAwB,SAAfH,EAAIG,QAA8B,CAAC,YAAa,YAAa,QAAS,SAAU,cAAe,UAAUtC,MAAKnE,IAAUsG,EAAII,YAAc,IAAI/F,SAASX,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWmE,UAAemC,EAAIK,SAAW,IAAIhG,SAASX,IAC7hB,CAaA,SAASqG,IACP,QAAmB,oBAARO,MAAwBA,IAAIC,WAChCD,IAAIC,SAAS,0BAA2B,OACjD,CACA,SAASC,EAAsBvC,GACtB,MAAA,CAAC,OAAQ,OAAQ,aAAa5D,SAAS2D,EAAYC,GAC5D,CACA,SAASoB,EAAiBvC,GACxB,OAAOuB,EAAUvB,GAASuC,iBAAiBvC,EAC7C,CACA,SAAS2D,EAAc3D,GACjB,OAAAG,EAAUH,GACL,CACL4D,WAAY5D,EAAQ4D,WACpBC,UAAW7D,EAAQ6D,WAGhB,CACLD,WAAY5D,EAAQ8D,QACpBD,UAAW7D,EAAQ+D,QAEvB,CACA,SAASC,EAAc7C,GACjB,GAAsB,SAAtBD,EAAYC,GACP,OAAAA,EAEH,MAAA8C,EAEN9C,EAAK+C,cAEL/C,EAAKgD,YAELlC,EAAad,IAASA,EAAKiD,MAE3B/D,EAAmBc,GACnB,OAAOc,EAAagC,GAAUA,EAAOG,KAAOH,CAC9C,CACA,SAASI,EAA2BlD,GAC5B,MAAAgD,EAAaH,EAAc7C,GAC7B,OAAAuC,EAAsBS,GACjBhD,EAAKM,cAAgBN,EAAKM,cAAc6C,KAAOnD,EAAKmD,KAEzDvC,EAAcoC,IAAehC,EAAkBgC,GAC1CA,EAEFE,EAA2BF,EACpC,CACA,SAASI,EAAqBpD,EAAMqD,EAAMC,GACpC,IAAAC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACgBA,GAAA,GAEd,MAAAE,EAAqBN,EAA2BlD,GAChDyD,EAASD,KAAuE,OAA9CD,EAAuBvD,EAAKM,oBAAyB,EAASiD,EAAqBJ,MACrHO,EAAMtD,EAAUoD,GACtB,GAAIC,EAAQ,CACJ,MAAAE,EAAeC,EAAgBF,GACrC,OAAOL,EAAKQ,OAAOH,EAAKA,EAAII,gBAAkB,GAAI9C,EAAkBwC,GAAsBA,EAAqB,GAAIG,GAAgBL,EAAkBF,EAAqBO,GAAgB,GAC9L,CACS,OAAAN,EAAKQ,OAAOL,EAAoBJ,EAAqBI,EAAoB,GAAIF,GACtF,CACA,SAASM,EAAgBF,GAChB,OAAAA,EAAIK,QAAUC,OAAOC,eAAeP,EAAIK,QAAUL,EAAIC,aAAe,IAC9E,CClJA,SAASO,EAAiBrF,GAClB,MAAAkD,EAAMX,EAAiBvC,GAG7B,IAAI7B,EAAQmH,WAAWpC,EAAI/E,QAAU,EACjCC,EAASkH,WAAWpC,EAAI9E,SAAW,EACjC,MAAAmH,EAAYxD,EAAc/B,GAC1BwF,EAAcD,EAAYvF,EAAQwF,YAAcrH,EAChDsH,EAAeF,EAAYvF,EAAQyF,aAAerH,EAClDsH,EAAiB7J,EAAMsC,KAAWqH,GAAe3J,EAAMuC,KAAYqH,EAKlE,OAJHC,IACMvH,EAAAqH,EACCpH,EAAAqH,GAEJ,CACLtH,QACAC,SACAuH,EAAGD,EAEP,CAEA,SAASE,EAAc5F,GACrB,OAAQG,EAAUH,GAAoCA,EAAzBA,EAAQI,cACvC,CAEA,SAASK,GAAST,GACV,MAAA6F,EAAaD,EAAc5F,GAC7B,IAAC+B,EAAc8D,GACjB,OAAO9J,EAAa,GAEhB,MAAAmC,EAAO2H,EAAWC,yBAClB3H,MACJA,EAAAC,OACAA,EAAAuH,EACAA,GACEN,EAAiBQ,GACrB,IAAI5J,GAAK0J,EAAI9J,EAAMqC,EAAKC,OAASD,EAAKC,OAASA,EAC3CjC,GAAKyJ,EAAI9J,EAAMqC,EAAKE,QAAUF,EAAKE,QAAUA,EAU1C,OANFnC,GAAM8J,OAAOC,SAAS/J,KACrBA,EAAA,GAEDC,GAAM6J,OAAOC,SAAS9J,KACrBA,EAAA,GAEC,CACLD,IACAC,IAEJ,CAEA,MAAM+J,KAAsC,GAC5C,SAASC,GAAiBlG,GAClB,MAAA6E,EAAMtD,EAAUvB,GACtB,OAAKiD,KAAe4B,EAAII,eAGjB,CACLhJ,EAAG4I,EAAII,eAAekB,WACtBjK,EAAG2I,EAAII,eAAemB,WAJfH,EAMX,CAWA,SAASH,GAAsB9F,EAASqG,EAAcC,EAAiBhG,QAChD,IAAjB+F,IACaA,GAAA,QAEO,IAApBC,IACgBA,GAAA,GAEd,MAAAC,EAAavG,EAAQ8F,wBACrBD,EAAaD,EAAc5F,GAC7B,IAAAwG,EAAQzK,EAAa,GACrBsK,IACE/F,EACEH,EAAUG,KACZkG,EAAQ/F,GAASH,IAGnBkG,EAAQ/F,GAAST,IAGf,MAAAyG,EA7BR,SAAgCzG,EAAS0G,EAASC,GAIhD,YAHgB,IAAZD,IACQA,GAAA,MAEPC,GAAwBD,GAAWC,IAAyBpF,EAAUvB,KAGpE0G,CACT,CAqBwBE,CAAuBf,EAAYS,EAAiBhG,GAAgB4F,GAAiBL,GAAc9J,EAAa,GACtI,IAAIE,GAAKsK,EAAWnK,KAAOqK,EAAcxK,GAAKuK,EAAMvK,EAChDC,GAAKqK,EAAWhK,IAAMkK,EAAcvK,GAAKsK,EAAMtK,EAC/CiC,EAAQoI,EAAWpI,MAAQqI,EAAMvK,EACjCmC,EAASmI,EAAWnI,OAASoI,EAAMtK,EACvC,GAAI2J,EAAY,CACR,MAAAhB,EAAMtD,EAAUsE,GAChBgB,EAAYvG,GAAgBH,EAAUG,GAAgBiB,EAAUjB,GAAgBA,EACtF,IAAIwG,EAAajC,EACbkC,EAAgBhC,EAAgB+B,GAC7B,KAAAC,GAAiBzG,GAAgBuG,IAAcC,GAAY,CAC1D,MAAAE,EAAcvG,GAASsG,GACvBE,EAAaF,EAAcjB,wBAC3B5C,EAAMX,EAAiBwE,GACvB3K,EAAO6K,EAAW7K,MAAQ2K,EAAcG,WAAa5B,WAAWpC,EAAIiE,cAAgBH,EAAY/K,EAChGM,EAAM0K,EAAW1K,KAAOwK,EAAcK,UAAY9B,WAAWpC,EAAImE,aAAeL,EAAY9K,EAClGD,GAAK+K,EAAY/K,EACjBC,GAAK8K,EAAY9K,EACjBiC,GAAS6I,EAAY/K,EACrBmC,GAAU4I,EAAY9K,EACjBD,GAAAG,EACAF,GAAAK,EACLuK,EAAavF,EAAUwF,GACvBA,EAAgBhC,EAAgB+B,EACtC,CACA,CACE,OAAO7I,EAAiB,CACtBE,QACAC,SACAnC,IACAC,KAEJ,CAIA,SAASoL,GAAoBtH,EAAS9B,GAC9B,MAAAqJ,EAAa5D,EAAc3D,GAAS4D,WAC1C,OAAK1F,EAGEA,EAAK9B,KAAOmL,EAFVzB,GAAsBzF,EAAmBL,IAAU5D,KAAOmL,CAGrE,CAEA,SAASC,GAAc5F,EAAiB6F,EAAQC,QACrB,IAArBA,IACiBA,GAAA,GAEf,MAAAC,EAAW/F,EAAgBkE,wBAK1B,MAAA,CACL7J,EALQ0L,EAASvL,KAAOqL,EAAO7D,YAAc8D,EAAmB,EAElEJ,GAAoB1F,EAAiB+F,IAInCzL,EAHQyL,EAASpL,IAAMkL,EAAO5D,UAKlC,CA6GA,SAAS+D,GAAkC5H,EAAS6H,EAAkBnI,GAChE,IAAAxB,EACJ,GAAyB,aAArB2J,EACK3J,EA7CX,SAAyB8B,EAASN,GAC1B,MAAAmF,EAAMtD,EAAUvB,GAChB8H,EAAOzH,EAAmBL,GAC1BiF,EAAiBJ,EAAII,eAC3B,IAAI9G,EAAQ2J,EAAKC,YACb3J,EAAS0J,EAAKE,aACd/L,EAAI,EACJC,EAAI,EACR,GAAI+I,EAAgB,CAClB9G,EAAQ8G,EAAe9G,MACvBC,EAAS6G,EAAe7G,OACxB,MAAM6J,EAAsBhF,MACvBgF,GAAuBA,GAAoC,UAAbvI,KACjDzD,EAAIgJ,EAAekB,WACnBjK,EAAI+I,EAAemB,UAEzB,CACS,MAAA,CACLjI,QACAC,SACAnC,IACAC,IAEJ,CAsBWgM,CAAgBlI,EAASN,QACpC,GAAkC,aAArBmI,EACF3J,EAlEX,SAAyB8B,GACjB,MAAA8H,EAAOzH,EAAmBL,GAC1ByH,EAAS9D,EAAc3D,GACvBsE,EAAOtE,EAAQyB,cAAc6C,KAC7BnG,EAAQvC,EAAIkM,EAAKK,YAAaL,EAAKC,YAAazD,EAAK6D,YAAa7D,EAAKyD,aACvE3J,EAASxC,EAAIkM,EAAKM,aAAcN,EAAKE,aAAc1D,EAAK8D,aAAc9D,EAAK0D,cACjF,IAAI/L,GAAKwL,EAAO7D,WAAa0D,GAAoBtH,GAC3C,MAAA9D,GAAKuL,EAAO5D,UAIX,MAHkC,QAArCtB,EAAiB+B,GAAM+D,YACzBpM,GAAKL,EAAIkM,EAAKC,YAAazD,EAAKyD,aAAe5J,GAE1C,CACLA,QACAC,SACAnC,IACAC,IAEJ,CAiDWoM,CAAgBjI,EAAmBL,SAC9C,GAAaG,EAAU0H,GACZ3J,EAvBX,SAAoC8B,EAASN,GAC3C,MAAM6G,EAAaT,GAAsB9F,GAAS,EAAmB,UAAbN,GAClDnD,EAAMgK,EAAWhK,IAAMyD,EAAQoH,UAC/BhL,EAAOmK,EAAWnK,KAAO4D,EAAQkH,WACjCV,EAAQzE,EAAc/B,GAAWS,GAAST,GAAWjE,EAAa,GAKjE,MAAA,CACLoC,MALY6B,EAAQ+H,YAAcvB,EAAMvK,EAMxCmC,OALa4B,EAAQgI,aAAexB,EAAMtK,EAM1CD,EALQG,EAAOoK,EAAMvK,EAMrBC,EALQK,EAAMiK,EAAMtK,EAOxB,CAQWqM,CAA2BV,EAAkBnI,OAC/C,CACC,MAAA+G,EAAgBP,GAAiBlG,GAChC9B,EAAA,CACLjC,EAAG4L,EAAiB5L,EAAIwK,EAAcxK,EACtCC,EAAG2L,EAAiB3L,EAAIuK,EAAcvK,EACtCiC,MAAO0J,EAAiB1J,MACxBC,OAAQyJ,EAAiBzJ,OAE/B,CACE,OAAOH,EAAiBC,EAC1B,CACA,SAASsK,GAAyBxI,EAASyI,GACnC,MAAAtE,EAAaH,EAAchE,GAC7B,QAAAmE,IAAesE,IAAatI,EAAUgE,IAAeT,EAAsBS,MAG9B,UAA1C5B,EAAiB4B,GAAYuE,UAAwBF,GAAyBrE,EAAYsE,GACnG,CA2EA,SAASE,GAA8B3I,EAASM,EAAcZ,GACtD,MAAAkJ,EAA0B7G,EAAczB,GACxCsB,EAAkBvB,EAAmBC,GACrCoG,EAAuB,UAAbhH,EACVxB,EAAO4H,GAAsB9F,GAAS,EAAM0G,EAASpG,GAC3D,IAAImH,EAAS,CACX7D,WAAY,EACZC,UAAW,GAEP,MAAAgF,EAAU9M,EAAa,GAI7B,SAAS+M,IACCD,EAAA5M,EAAIqL,GAAoB1F,EACpC,CACE,GAAIgH,IAA4BA,IAA4BlC,EAI1D,IAHkC,SAA9BxF,EAAYZ,IAA4B6B,EAAkBP,MAC5D6F,EAAS9D,EAAcrD,IAErBsI,EAAyB,CAC3B,MAAMG,EAAajD,GAAsBxF,GAAc,EAAMoG,EAASpG,GAC9DuI,EAAA5M,EAAI8M,EAAW9M,EAAIqE,EAAa4G,WAChC2B,EAAA3M,EAAI6M,EAAW7M,EAAIoE,EAAa8G,SACzC,MAAUxF,GACkBkH,IAG3BpC,IAAYkC,GAA2BhH,GACdkH,IAEvB,MAAAE,GAAapH,GAAoBgH,GAA4BlC,EAAmD3K,EAAa,GAAtDyL,GAAc5F,EAAiB6F,GAGrG,MAAA,CACLxL,EAHQiC,EAAK9B,KAAOqL,EAAO7D,WAAaiF,EAAQ5M,EAAI+M,EAAW/M,EAI/DC,EAHQgC,EAAK3B,IAAMkL,EAAO5D,UAAYgF,EAAQ3M,EAAI8M,EAAW9M,EAI7DiC,MAAOD,EAAKC,MACZC,OAAQF,EAAKE,OAEjB,CAEA,SAAS6K,GAAmBjJ,GACnB,MAAuC,WAAvCuC,EAAiBvC,GAAS0I,QACnC,CAEA,SAASQ,GAAoBlJ,EAASmJ,GAChC,IAACpH,EAAc/B,IAAmD,UAAvCuC,EAAiBvC,GAAS0I,SAChD,OAAA,KAET,GAAIS,EACF,OAAOA,EAASnJ,GAElB,IAAIoJ,EAAkBpJ,EAAQM,aASvB,OAHHD,EAAmBL,KAAaoJ,IAClCA,EAAkBA,EAAgB3H,cAAc6C,MAE3C8E,CACT,CAIA,SAAS7I,GAAgBP,EAASmJ,GAC1B,MAAAtE,EAAMtD,EAAUvB,GAClB,GAAA0C,EAAW1C,GACN,OAAA6E,EAEL,IAAC9C,EAAc/B,GAAU,CACvB,IAAAqJ,EAAkBrF,EAAchE,GACpC,KAAOqJ,IAAoB3F,EAAsB2F,IAAkB,CACjE,GAAIlJ,EAAUkJ,KAAqBJ,GAAmBI,GAC7C,OAAAA,EAETA,EAAkBrF,EAAcqF,EACtC,CACW,OAAAxE,CACX,CACM,IAAAvE,EAAe4I,GAAoBlJ,EAASmJ,GAChD,KAAO7I,GAAgBmC,EAAenC,IAAiB2I,GAAmB3I,IACzDA,EAAA4I,GAAoB5I,EAAc6I,GAE/C,OAAA7I,GAAgBoD,EAAsBpD,IAAiB2I,GAAmB3I,KAAkBwC,EAAkBxC,GACzGuE,EAEFvE,GD5XT,SAA4BN,GACtB,IAAAsJ,EAActF,EAAchE,GAChC,KAAO+B,EAAcuH,KAAiB5F,EAAsB4F,IAAc,CACpE,GAAAxG,EAAkBwG,GACb,OAAAA,EACb,GAAe5G,EAAW4G,GACb,OAAA,KAETA,EAActF,EAAcsF,EAChC,CACS,OAAA,IACT,CCiXyBC,CAAmBvJ,IAAY6E,CACxD,CAqBA,MAAMtF,GAAW,CACfoB,sDA/TF,SAA+DrC,GACzD,IAAAmB,SACFA,EAAAvB,KACAA,EAAAoC,aACAA,EAAAZ,SACAA,GACEpB,EACJ,MAAMoI,EAAuB,UAAbhH,EACVkC,EAAkBvB,EAAmBC,GACrCkJ,IAAW/J,GAAWiD,EAAWjD,EAAShB,UAC5C,GAAA6B,IAAiBsB,GAAmB4H,GAAY9C,EAC3C,OAAAxI,EAET,IAAIuJ,EAAS,CACX7D,WAAY,EACZC,UAAW,GAET2C,EAAQzK,EAAa,GACnB,MAAA8M,EAAU9M,EAAa,GACvB6M,EAA0B7G,EAAczB,GAC9C,IAAIsI,IAA4BA,IAA4BlC,MACxB,SAA9BxF,EAAYZ,IAA4B6B,EAAkBP,MAC5D6F,EAAS9D,EAAcrD,IAErByB,EAAczB,IAAe,CACzB,MAAAyI,EAAajD,GAAsBxF,GACzCkG,EAAQ/F,GAASH,GACTuI,EAAA5M,EAAI8M,EAAW9M,EAAIqE,EAAa4G,WAChC2B,EAAA3M,EAAI6M,EAAW7M,EAAIoE,EAAa8G,SAC9C,CAEE,MAAM4B,GAAapH,GAAoBgH,GAA4BlC,EAAyD3K,EAAa,GAA5DyL,GAAc5F,EAAiB6F,GAAQ,GAC7G,MAAA,CACLtJ,MAAOD,EAAKC,MAAQqI,EAAMvK,EAC1BmC,OAAQF,EAAKE,OAASoI,EAAMtK,EAC5BD,EAAGiC,EAAKjC,EAAIuK,EAAMvK,EAAIwL,EAAO7D,WAAa4C,EAAMvK,EAAI4M,EAAQ5M,EAAI+M,EAAW/M,EAC3EC,EAAGgC,EAAKhC,EAAIsK,EAAMtK,EAAIuL,EAAO5D,UAAY2C,EAAMtK,EAAI2M,EAAQ3M,EAAI8M,EAAW9M,EAE9E,EA0REmE,qBACAH,gBAvJF,SAAyB5B,GACnB,IAAA0B,QACFA,EAAAL,SACAA,EAAAC,aACAA,EAAAF,SACAA,GACEpB,EACJ,MACMmL,EAAoB,IADoB,sBAAb9J,EAAmC+C,EAAW1C,GAAW,GAxC5F,SAAqCA,EAAS0J,GACtC,MAAAC,EAAeD,EAAME,IAAI5J,GAC/B,GAAI2J,EACK,OAAAA,EAET,IAAI1F,EAASM,EAAqBvE,EAAS,IAAI,GAAOqD,QAAOwG,GAAM1J,EAAU0J,IAA2B,SAApB3I,EAAY2I,KAC5FC,EAAsC,KAC1C,MAAMC,EAAwD,UAAvCxH,EAAiBvC,GAAS0I,SACjD,IAAIY,EAAcS,EAAiB/F,EAAchE,GAAWA,EAG5D,KAAOG,EAAUmJ,KAAiB5F,EAAsB4F,IAAc,CAC9D,MAAAU,EAAgBzH,EAAiB+G,GACjCW,EAA0BnH,EAAkBwG,GAC7CW,GAAsD,UAA3BD,EAActB,WACNoB,EAAA,OAEVC,GAAkBE,IAA4BH,GAAuCG,GAAsD,WAA3BD,EAActB,UAA2BoB,GAAuC,CAAC,WAAY,SAASvM,SAASuM,EAAoCpB,WAAavG,EAAkBmH,KAAiBW,GAA2BzB,GAAyBxI,EAASsJ,IAG5YrF,EAASA,EAAOZ,QAAmB6G,GAAAA,IAAaZ,IAGVQ,EAAAE,EAExCV,EAActF,EAAcsF,EAChC,CAES,OADDI,EAAAjP,IAAIuF,EAASiE,GACZA,CACT,CAWiGkG,CAA4BnK,EAASoK,KAAKC,IAAM,GAAGrF,OAAOrF,GACjGC,GAClD0K,EAAwBb,EAAkB,GAC1Cc,EAAed,EAAkBe,QAAO,CAACC,EAAS5C,KACtD,MAAM3J,EAAO0J,GAAkC5H,EAAS6H,EAAkBnI,GAKnE,OAJP+K,EAAQlO,IAAMX,EAAIsC,EAAK3B,IAAKkO,EAAQlO,KACpCkO,EAAQpO,MAAQX,EAAIwC,EAAK7B,MAAOoO,EAAQpO,OACxCoO,EAAQnO,OAASZ,EAAIwC,EAAK5B,OAAQmO,EAAQnO,QAC1CmO,EAAQrO,KAAOR,EAAIsC,EAAK9B,KAAMqO,EAAQrO,MAC/BqO,CAAA,GACN7C,GAAkC5H,EAASsK,EAAuB5K,IAC9D,MAAA,CACLvB,MAAOoM,EAAalO,MAAQkO,EAAanO,KACzCgC,OAAQmM,EAAajO,OAASiO,EAAahO,IAC3CN,EAAGsO,EAAanO,KAChBF,EAAGqO,EAAahO,IAEpB,EAgIEgE,mBACAmK,gBAxBsBxL,eAAgByL,GAChC,MAAAC,EAAoBR,KAAK7J,iBAAmBA,GAC5CsK,EAAkBT,KAAKU,cACvBC,QAA2BF,EAAgBF,EAAKlM,UAC/C,MAAA,CACLD,UAAWmK,GAA8BgC,EAAKnM,gBAAiBoM,EAAkBD,EAAKlM,UAAWkM,EAAKjL,UACtGjB,SAAU,CACRxC,EAAG,EACHC,EAAG,EACHiC,MAAO4M,EAAmB5M,MAC1BC,OAAQ2M,EAAmB3M,QAGjC,EAYE4M,eA5RF,SAAwBhL,GACtB,OAAO/E,MAAMC,KAAK8E,EAAQgL,iBAC5B,EA2REF,cAjIF,SAAuB9K,GACf,MAAA7B,MACJA,EAAAC,OACAA,GACEiH,EAAiBrF,GACd,MAAA,CACL7B,QACAC,SAEJ,EAyHEqC,YACAN,YACA8K,MAdF,SAAejL,GACN,MAAwC,QAAxCuC,EAAiBvC,GAASqI,SACnC,GAeA,SAAS6C,GAAc5P,EAAGC,GACxB,OAAOD,EAAEW,IAAMV,EAAEU,GAAKX,EAAEY,IAAMX,EAAEW,GAAKZ,EAAE6C,QAAU5C,EAAE4C,OAAS7C,EAAE8C,SAAW7C,EAAE6C,MAC7E,CAkGA,SAAS+M,GAAW3M,EAAWC,EAAU2M,EAAQ/L,QAC/B,IAAZA,IACFA,EAAU,CAAE,GAER,MAAAgM,eACJA,GAAiB,EAAAC,eACjBA,GAAiB,EAAAC,cACjBA,EAA0C,mBAAnBC,eAAmBC,YAC1CA,EAA8C,mBAAzBC,qBAAyBC,eAC9CA,GAAiB,GACftM,EACEuM,EAAchG,EAAcpH,GAC5BqN,EAAYR,GAAkBC,EAAiB,IAAKM,EAAcrH,EAAqBqH,GAAe,MAAQrH,EAAqB9F,IAAa,GACtJoN,EAAUC,SAAoB5B,IACVmB,GAAAnB,EAAS6B,iBAAiB,SAAUX,EAAQ,CAC5DY,SAAS,IAEOV,GAAApB,EAAS6B,iBAAiB,SAAUX,EAAM,IAE9D,MAAMa,EAAYL,GAAeH,EAlHnC,SAAqBzL,EAASkM,GAC5B,IACIC,EADAC,EAAK,KAEH,MAAAC,EAAOhM,EAAmBL,GAChC,SAASsM,IACH,IAAAC,EACJC,aAAaL,GACC,OAAbI,EAAMH,IAAeG,EAAIE,aACrBL,EAAA,IACT,CA2ES,OA1EE,SAAAM,EAAQC,EAAMC,QACR,IAATD,IACKA,GAAA,QAES,IAAdC,IACUA,EAAA,GAELN,IACH,MAAAO,EAA2B7M,EAAQ8F,yBACnC1J,KACJA,EAAAG,IACAA,EAAA4B,MACAA,EAAAC,OACAA,GACEyO,EAIA,GAHCF,GACKT,KAEL/N,IAAUC,EACb,OAEI,MAKAiB,EAAU,CACdyN,YANehR,EAAMS,GAIQ,OAHZT,EAAMuQ,EAAKtE,aAAe3L,EAAO+B,IAGC,OAFjCrC,EAAMuQ,EAAKrE,cAAgBzL,EAAM6B,IAEuB,OAD1DtC,EAAMM,GACyE,KAG/FwQ,UAAWhR,EAAI,EAAGF,EAAI,EAAGkR,KAAe,GAE1C,IAAIG,GAAgB,EACpB,SAASC,EAAcC,GACf,MAAAC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUN,EAAW,CACvB,IAAKG,EACH,OAAOL,IAEJQ,EAOHR,GAAQ,EAAOQ,GAJff,EAAYiB,YAAW,KACrBV,GAAQ,EAAO,KAAI,GAClB,IAIb,CACoB,IAAVQ,GAAgBhC,GAAc2B,EAA0B7M,EAAQ8F,0BAQzD4G,IAEKK,GAAA,CACtB,CAIQ,IACGX,EAAA,IAAIV,qBAAqBsB,EAAe,IACxC3N,EAEHgN,KAAMA,EAAK5K,eAEd,OAAQ4L,GACFjB,EAAA,IAAIV,qBAAqBsB,EAAe3N,EACnD,CACI+M,EAAGkB,QAAQtN,EACf,CACE0M,EAAQ,GACDJ,CACT,CA6BiDiB,CAAY3B,EAAaR,GAAU,KAClF,IAsBIoC,EAtBAC,GAAiB,EACjBC,EAAiB,KACjBnC,IACemC,EAAA,IAAIlC,gBAAuBlN,IACtC,IAACqP,GAAcrP,EACfqP,GAAcA,EAAWC,SAAWhC,GAAe8B,IAGrDA,EAAeG,UAAUpP,GACzBqP,qBAAqBL,GACrBA,EAAiBM,uBAAsB,KACjC,IAAAC,EACkC,OAArCA,EAAkBN,IAA2BM,EAAgBV,QAAQ7O,EAAQ,KAG1E2M,GAAA,IAENQ,IAAgBD,GAClB+B,EAAeJ,QAAQ1B,GAEzB8B,EAAeJ,QAAQ7O,IAGzB,IAAIwP,EAActC,EAAiB7F,GAAsBtH,GAAa,KAatE,OAZImN,GAGJ,SAASuC,IACD,MAAAC,EAAcrI,GAAsBtH,GACtCyP,IAAgB/C,GAAc+C,EAAaE,IACrC/C,IAEI6C,EAAAE,EACdX,EAAUO,sBAAsBG,EACpC,CATeA,GAUL9C,IACD,KACD,IAAAgD,EACJvC,EAAUC,SAAoB5B,IACVmB,GAAAnB,EAASmE,oBAAoB,SAAUjD,GACvCE,GAAApB,EAASmE,oBAAoB,SAAUjD,EAAM,IAEpD,MAAba,GAAqBA,IACkB,OAAtCmC,EAAmBV,IAA2BU,EAAiB3B,aAC/CiB,EAAA,KACb/B,GACFmC,qBAAqBN,EAC3B,CAEA,CAmBA,MAAMc,GFyGS,SAAUjP,GAIhB,YAHS,IAAZA,IACQA,EAAA,GAEL,CACL/G,KAAM,SACN+G,UACA,QAAMkP,CAAGnP,GACP,IAAIoP,EAAuBC,EACrB,MAAAxS,EACJA,EAAAC,EACAA,EAAAc,UACAA,EAAA0R,eACAA,GACEtP,EACEuP,QA9DZzP,eAAoCE,EAAOC,GACnC,MAAArC,UACJA,EACAuC,SAAAA,EAAAA,SACAE,GACEL,EACEb,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WACvEZ,EAAOd,EAAQC,GACfW,EAAYT,EAAaF,GACzB6B,EAAwC,MAA3BvB,EAAYN,GACzB4R,EAAgB,CAAC,OAAQ,OAAOrR,SAASM,IAAa,EAAA,EACtDgR,EAAiBtQ,GAAOM,GAAkB,EAAA,EAC1CiQ,EAAWjS,EAASwC,EAASD,GAG/B,IAAA2P,SACFA,EAAAC,UACAA,EAAArQ,cACAA,GACsB,iBAAbmQ,EAAwB,CACjCC,SAAUD,EACVE,UAAW,EACXrQ,cAAe,MACb,CACFoQ,SAAUD,EAASC,UAAY,EAC/BC,UAAWF,EAASE,WAAa,EACjCrQ,cAAemQ,EAASnQ,eAK1B,OAHIhB,GAAsC,iBAAlBgB,IACVqQ,EAAc,QAAdrR,GAA2C,EAArBgB,EAAqBA,GAElDE,EAAa,CAClB5C,EAAG+S,EAAYH,EACf3S,EAAG6S,EAAWH,GACZ,CACF3S,EAAG8S,EAAWH,EACd1S,EAAG8S,EAAYH,EAEnB,CAwB+BI,CAAqB7P,EAAOC,GAIrD,OAAIrC,KAAkE,OAAlDwR,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsBxR,YAAgE,OAAjDyR,EAAwBC,EAAeQ,QAAkBT,EAAsBU,gBACjM,CAAE,EAEJ,CACLlT,EAAGA,EAAI0S,EAAW1S,EAClBC,EAAGA,EAAIyS,EAAWzS,EAClByO,KAAM,IACDgE,EACH3R,aAGV,EAEA,EE1HMoS,GFiIQ,SAAU/P,GAIf,YAHS,IAAZA,IACFA,EAAU,CAAE,GAEP,CACL/G,KAAM,QACN+G,UACA,QAAMkP,CAAGnP,GACD,MAAAnD,EACJA,EAAAC,EACAA,EAAAc,UACAA,GACEoC,GAEF2P,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,EAAAC,QAC5BA,EAAU,CACRhB,GAAYjQ,IACN,IACFrC,EAAAA,EACAC,EAAAA,GACEoC,EACG,MAAA,CACLrC,EAAAA,EACAC,EAAAA,EACD,MAGFsT,GACD3S,EAASwC,EAASD,GAChBH,EAAS,CACbhD,IACAC,KAEI2E,QAAiB1B,EAAeC,EAAOoQ,GACvCR,EAAY1R,EAAYP,EAAQC,IAChC+R,EAAW5R,EAAgB6R,GAC7B,IAAAS,EAAgBxQ,EAAO8P,GACvBW,EAAiBzQ,EAAO+P,GAC5B,GAAIK,EAAe,CACX,MACAM,EAAuB,MAAbZ,EAAmB,SAAW,QAG9BU,EAAA9S,EAFJ8S,EAAgB5O,EAFC,MAAbkO,EAAmB,MAAQ,QAIhBU,EADfA,EAAgB5O,EAAS8O,GAE7C,CACM,GAAIL,EAAgB,CACZ,MACAK,EAAwB,MAAdX,EAAoB,SAAW,QAG9BU,EAAA/S,EAFL+S,EAAiB7O,EAFC,MAAdmO,EAAoB,MAAQ,QAIhBU,EADhBA,EAAiB7O,EAAS8O,GAE9C,CACY,MAAAC,EAAgBL,EAAQhB,GAAG,IAC5BnP,EACH2P,CAACA,GAAWU,EACZT,CAACA,GAAYU,IAER,MAAA,IACFE,EACHjF,KAAM,CACJ1O,EAAG2T,EAAc3T,EAAIA,EACrBC,EAAG0T,EAAc1T,EAAIA,EACrB2T,QAAS,CACPd,CAACA,GAAWM,EACZL,CAACA,GAAYM,IAIzB,EAEA,EEhMMQ,GFrSO,SAAUzQ,GAId,YAHS,IAAZA,IACFA,EAAU,CAAE,GAEP,CACL/G,KAAM,OACN+G,UACA,QAAMkP,CAAGnP,GACP,IAAIqP,EAAuBsB,EACrB,MAAA/S,UACJA,EAAA0R,eACAA,EAAAlP,MACAA,EAAAwQ,iBACAA,EACAzQ,SAAAA,EAAAA,SACAE,GACEL,GAEF2P,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,EAC5BW,mBAAoBC,EAAAC,iBACpBA,EAAmB,UAAAC,0BACnBA,EAA4B,OAAAC,cAC5BA,GAAgB,KACbb,GACD3S,EAASwC,EAASD,GAMtB,GAAsD,OAAjDqP,EAAwBC,EAAeQ,QAAkBT,EAAsBU,gBAClF,MAAO,CAAE,EAEL,MAAAtR,EAAOd,EAAQC,GACfsT,EAAkBhT,EAAY0S,GAC9BO,EAAkBxT,EAAQiT,KAAsBA,EAChDzR,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WACvEwR,EAAqBC,IAAgCK,IAAoBF,EAAgB,CAACzS,EAAqBoS,ID7X3H,SAA+BhT,GACvB,MAAAwT,EAAoB5S,EAAqBZ,GAC/C,MAAO,CAACS,EAA8BT,GAAYwT,EAAmB/S,EAA8B+S,GACrG,CC0XgJC,CAAsBT,IAC1JU,EAA6D,SAA9BN,GAChCF,GAA+BQ,GAClCT,EAAmBU,QDxW3B,SAAmC3T,EAAWqT,EAAehI,EAAW9J,GAChE,MAAAZ,EAAYT,EAAaF,GAC/B,IAAIwH,EAnBN,SAAqB3G,EAAM+S,EAASrS,GAC5B,MAAAsS,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQnT,GACN,IAAK,MACL,IAAK,SACC,OAAAU,EAAYqS,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAYlU,EAAQC,GAA0B,UAAdqL,EAAuB9J,GAO3D,OANHZ,IACF6G,EAAOA,EAAK0M,KAAYrT,GAAAA,EAAO,IAAMF,IACjC0S,IACF7L,EAAOA,EAAKQ,OAAOR,EAAK0M,IAAIzT,MAGzB+G,CACT,CC8VmC2M,CAA0BnB,EAAkBK,EAAeD,EAA2B7R,IAEnH,MAAM6S,EAAa,CAACpB,KAAqBC,GACnCpP,QAAiB1B,EAAeC,EAAOoQ,GACvC6B,EAAY,GACd,IAAAC,GAAiE,OAA/CvB,EAAuBrB,EAAeoB,WAAgB,EAASC,EAAqBsB,YAAc,GAIxH,GAHIhC,GACQgC,EAAAV,KAAK9P,EAAShD,IAEtByR,EAAgB,CAClB,MAAM7T,EDvZd,SAA2BuB,EAAWwC,EAAOjB,QAC/B,IAARA,IACIA,GAAA,GAEF,MAAAZ,EAAYT,EAAaF,GACzB2B,EAAgBnB,EAAiBR,GACjCuU,EAASlU,EAAcsB,GACzB,IAAA6S,EAAsC,MAAlB7S,EAAwBhB,KAAeY,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAdZ,EAAwB,SAAW,MAI9I,OAHI6B,EAAMhB,UAAU+S,GAAU/R,EAAMf,SAAS8S,KAC3CC,EAAoB5T,EAAqB4T,IAEpC,CAACA,EAAmB5T,EAAqB4T,GAClD,CC2YsBC,CAAkBzU,EAAWwC,EAAOjB,GACxC8S,EAAAV,KAAK9P,EAASpF,EAAM,IAAKoF,EAASpF,EAAM,IAC1D,CAOM,GANgB6V,EAAA,IAAIA,EAAe,CACjCtU,YACAqU,eAIGA,EAAUK,OAAM7T,GAAQA,GAAQ,IAAI,CACvC,IAAI8T,EAAuBC,EACrB,MAAAC,IAA+D,OAAhDF,EAAwBjD,EAAeoB,WAAgB,EAAS6B,EAAsBG,QAAU,GAAK,EACpHC,EAAgBX,EAAWS,GACjC,GAAIE,EAAe,CACb,IAAAC,EACJ,MAAMC,EAA6C,cAAnB3C,GAAiCgB,IAAoBhT,EAAYyU,GAC3FG,GAAsE,OAAvCF,EAAkBV,EAAc,SAAc,EAASU,EAAgBX,UAAU,IAAM,EACxH,IAACY,GAA2BC,EAEvB,MAAA,CACLvH,KAAM,CACJmH,MAAOD,EACPR,UAAWC,GAEba,MAAO,CACLnV,UAAW+U,GAI3B,CAIQ,IAAIK,EAAgJ,OAA9HR,EAAwBN,EAAcjO,QAAYgP,GAAAA,EAAEhB,UAAU,IAAM,IAAGhW,MAAK,CAACC,EAAGC,IAAMD,EAAE+V,UAAU,GAAK9V,EAAE8V,UAAU,KAAI,SAAc,EAASO,EAAsB5U,UAG1L,IAAKoV,EACH,OAAQjC,GACN,IAAK,UACH,CACM,IAAAmC,EACJ,MAAMtV,EASmJ,OATtIsV,EAAyBhB,EAAcjO,QAAYgP,IACpE,GAAI3B,EAA8B,CAC1B,MAAA6B,EAAkBjV,EAAY+U,EAAErV,WACtC,OAAOuV,IAAoBjC,GAGP,MAApBiC,CACpB,CACyB,OAAA,CAAA,IACNrB,QAAS,CAACmB,EAAErV,UAAWqV,EAAEhB,UAAUhO,QAAOxC,GAAYA,EAAW,IAAG2J,QAAO,CAACgI,EAAK3R,IAAa2R,EAAM3R,GAAU,MAAKxF,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,SAAc,EAAS+W,EAAuB,GAC5LtV,IACeA,EAAAA,GAEnB,KAChB,CACY,IAAK,mBACcoV,EAAApC,EAIvB,GAAIhT,IAAcoV,EACT,MAAA,CACLD,MAAO,CACLnV,UAAWoV,GAIzB,CACM,MAAO,CAAE,CACf,EAEA,EEkLMK,GFoQO,SAAUpT,GAId,YAHS,IAAZA,IACFA,EAAU,CAAE,GAEP,CACL/G,KAAM,OACN+G,UACA,QAAMkP,CAAGnP,GACP,IAAIsT,EAAuBC,EACrB,MAAA3V,UACJA,EAAAwC,MACAA,EACAD,SAAAA,EAAAA,SACAE,GACEL,GACEwT,MACJA,EAAQ,UACLpD,GACD3S,EAASwC,EAASD,GAChByB,QAAiB1B,EAAeC,EAAOoQ,GACvC3R,EAAOd,EAAQC,GACfW,EAAYT,EAAaF,GACzB6V,EAAqC,MAA3BvV,EAAYN,IACtBmB,MACJA,EAAAC,OACAA,GACEoB,EAAMf,SACN,IAAAqU,EACAC,EACS,QAATlV,GAA2B,WAATA,GACPiV,EAAAjV,EACbkV,EAAYpV,WAAyC,MAAlB4B,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxL,EAAShB,WAAc,QAAU,OAAS,OAAS,UAE3HsU,EAAAlV,EACCiV,EAAc,QAAdnV,EAAsB,MAAQ,UAE7C,MAAMqV,EAAwB5U,EAASyC,EAAStE,IAAMsE,EAASvE,OACzD2W,EAAuB9U,EAAQ0C,EAASzE,KAAOyE,EAASxE,MACxD6W,EAA0BxX,EAAI0C,EAASyC,EAASiS,GAAaE,GAC7DG,EAAyBzX,EAAIyC,EAAQ0C,EAASkS,GAAYE,GAC1DG,GAAWhU,EAAMsP,eAAeU,MACtC,IAAIiE,EAAkBH,EAClBI,EAAiBH,EAOjB,GANwD,OAAvDT,EAAwBtT,EAAMsP,eAAeU,QAAkBsD,EAAsB7C,QAAQ5T,IAC/EqX,EAAAL,GAE0C,OAAxDN,EAAyBvT,EAAMsP,eAAeU,QAAkBuD,EAAuB9C,QAAQ3T,IAChFmX,EAAAL,GAEhBI,IAAYzV,EAAW,CACzB,MAAM4V,EAAO3X,EAAIiF,EAASzE,KAAM,GAC1BoX,EAAO5X,EAAIiF,EAASxE,MAAO,GAC3BoX,EAAO7X,EAAIiF,EAAStE,IAAK,GACzBmX,EAAO9X,EAAIiF,EAASvE,OAAQ,GAC9BuW,EACFS,EAAiBnV,EAAQ,GAAc,IAAToV,GAAuB,IAATC,EAAaD,EAAOC,EAAO5X,EAAIiF,EAASzE,KAAMyE,EAASxE,QAEnGgX,EAAkBjV,EAAS,GAAc,IAATqV,GAAuB,IAATC,EAAaD,EAAOC,EAAO9X,EAAIiF,EAAStE,IAAKsE,EAASvE,QAE9G,OACYsW,EAAM,IACPxT,EACHkU,iBACAD,oBAEF,MAAMM,QAAuBpU,EAASuL,cAAcrL,EAAShB,UAC7D,OAAIN,IAAUwV,EAAexV,OAASC,IAAWuV,EAAevV,OACvD,CACL+T,MAAO,CACL3S,OAAO,IAIN,CAAE,CACf,EAEA,EEzUMoU,GFvKO,SAAUvU,GAId,YAHS,IAAZA,IACFA,EAAU,CAAE,GAEP,CACL/G,KAAM,OACN+G,UACA,QAAMkP,CAAGnP,GACD,MAAAI,MACJA,GACEJ,GACEM,SACJA,EAAW,qBACR8P,GACD3S,EAASwC,EAASD,GACtB,OAAQM,GACN,IAAK,kBACH,CACQ,MAIAmJ,EAAUjI,QAJOzB,EAAeC,EAAO,IACxCoQ,EACH3P,eAAgB,cAEuBL,EAAMhB,WACxC,MAAA,CACLmM,KAAM,CACJkJ,uBAAwBhL,EACxBiL,gBAAiBhT,EAAsB+H,IAGvD,CACQ,IAAK,UACH,CACQ,MAIAA,EAAUjI,QAJOzB,EAAeC,EAAO,IACxCoQ,EACH1P,aAAa,IAE0BN,EAAMf,UACxC,MAAA,CACLkM,KAAM,CACJoJ,eAAgBlL,EAChBmL,QAASlT,EAAsB+H,IAG/C,CACQ,QAEI,MAAO,CAAE,EAGrB,EAEA,EE2HMqG,GFrfoB7P,IAAA,CACxB/G,KAAM,QACN+G,UACA,QAAMkP,CAAGnP,GACD,MAAAnD,EACJA,EAAAC,EACAA,EAAAc,UACAA,EAAAwC,MACAA,EACAD,SAAAA,EAAAA,SACAE,EAAAiP,eACAA,GACEtP,GAEEY,QACJA,EAAAjC,QACAA,EAAU,GACRlB,EAASwC,EAASD,IAAU,CAAE,EAClC,GAAe,MAAXY,EACF,MAAO,CAAE,EAEL,MAAAD,EAAgBjC,EAAiBC,GACjCkB,EAAS,CACbhD,IACAC,KAEIkB,EAAOI,EAAiBR,GACxBuU,EAASlU,EAAcD,GACvB6W,QAAwB1U,EAASuL,cAAc9K,GAC/C6S,EAAmB,MAATzV,EACV8W,EAAUrB,EAAU,MAAQ,OAC5BsB,EAAUtB,EAAU,SAAW,QAC/BuB,EAAavB,EAAU,eAAiB,cACxCwB,EAAU7U,EAAMhB,UAAU+S,GAAU/R,EAAMhB,UAAUpB,GAAQ6B,EAAO7B,GAAQoC,EAAMf,SAAS8S,GAC1F+C,EAAYrV,EAAO7B,GAAQoC,EAAMhB,UAAUpB,GAC3CmX,QAAuD,MAA5BhV,EAASgB,qBAA0B,EAAShB,EAASgB,gBAAgBP,IACtG,IAAIwU,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtBjV,EAASY,eAAoB,EAASZ,EAASY,UAAUoU,MACnFC,EAAa/U,EAAShB,SAAS2V,IAAe5U,EAAMf,SAAS8S,IAEzD,MAAAkD,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIP,EAAgB1C,GAAU,EAAI,EACxEoD,EAAajZ,EAAIqE,EAAcmU,GAAUQ,GACzCE,EAAalZ,EAAIqE,EAAcoU,GAAUO,GAIzCG,EAAQF,EACR/Y,EAAM4Y,EAAaP,EAAgB1C,GAAUqD,EAC7CE,EAASN,EAAa,EAAIP,EAAgB1C,GAAU,EAAIkD,EACxDnG,EAAS3R,EAAMkY,EAAOC,EAAQlZ,GAM9BmZ,GAAmBrG,EAAeQ,OAAoC,MAA3BhS,EAAaF,IAAsB8X,IAAWxG,GAAU9O,EAAMhB,UAAU+S,GAAU,GAAKuD,EAASD,EAAQF,EAAaC,GAAcX,EAAgB1C,GAAU,EAAI,EAC5MpC,EAAkB4F,EAAkBD,EAASD,EAAQC,EAASD,EAAQC,EAASlZ,EAAM,EACpF,MAAA,CACLwB,CAACA,GAAO6B,EAAO7B,GAAQ+R,EACvBxE,KAAM,CACJvN,CAACA,GAAOkR,EACR0G,aAAcF,EAASxG,EAASa,KAC5B4F,GAAmB,CACrB5F,oBAGJgD,MAAO4C,EAEb,IEubME,GFkKa,SAAU5V,GAIpB,YAHS,IAAZA,IACFA,EAAU,CAAE,GAEP,CACLA,UACA,EAAAkP,CAAGnP,GACK,MAAAnD,EACJA,EAAAC,EACAA,EAAAc,UACAA,EAAAwC,MACAA,EAAAkP,eACAA,GACEtP,GAEFkP,OAAAA,EAAS,EACTS,SAAUM,GAAgB,EAC1BL,UAAWM,GAAiB,GAC1BzS,EAASwC,EAASD,GAChBH,EAAS,CACbhD,IACAC,KAEI8S,EAAY1R,EAAYN,GACxB+R,EAAW5R,EAAgB6R,GAC7B,IAAAS,EAAgBxQ,EAAO8P,GACvBW,EAAiBzQ,EAAO+P,GACtB,MAAAkG,EAAYrY,EAASyR,EAAQlP,GAC7B+V,EAAsC,iBAAdD,EAAyB,CACrDnG,SAAUmG,EACVlG,UAAW,GACT,CACFD,SAAU,EACVC,UAAW,KACRkG,GAEL,GAAI7F,EAAe,CACX,MAAA+F,EAAmB,MAAbrG,EAAmB,SAAW,QACpCsG,EAAW7V,EAAMhB,UAAUuQ,GAAYvP,EAAMf,SAAS2W,GAAOD,EAAepG,SAC5EuG,EAAW9V,EAAMhB,UAAUuQ,GAAYvP,EAAMhB,UAAU4W,GAAOD,EAAepG,SAC/EU,EAAgB4F,EACF5F,EAAA4F,EACP5F,EAAgB6F,IACT7F,EAAA6F,EAE1B,CACM,GAAIhG,EAAgB,CAClB,IAAId,EAAuB+G,EACrB,MAAAH,EAAmB,MAAbrG,EAAmB,QAAU,SACnCyG,EAAe,CAAC,MAAO,QAAQjY,SAASR,EAAQC,IAChDqY,EAAW7V,EAAMhB,UAAUwQ,GAAaxP,EAAMf,SAAS2W,IAAQI,IAAmE,OAAlDhH,EAAwBE,EAAeJ,aAAkB,EAASE,EAAsBQ,KAAmB,IAAMwG,EAAe,EAAIL,EAAenG,WACnOsG,EAAW9V,EAAMhB,UAAUwQ,GAAaxP,EAAMhB,UAAU4W,IAAQI,EAAe,GAAyD,OAAnDD,EAAyB7G,EAAeJ,aAAkB,EAASiH,EAAuBvG,KAAe,IAAMwG,EAAeL,EAAenG,UAAY,GAChPU,EAAiB2F,EACF3F,EAAA2F,EACR3F,EAAiB4F,IACT5F,EAAA4F,EAE3B,CACa,MAAA,CACLvG,CAACA,GAAWU,EACZT,CAACA,GAAYU,EAErB,EAEA,EE5NM+F,GAAkB,CAACjX,EAAWC,EAAUY,KAItC,MAAAqK,MAAY1Q,IACZ0c,EAAgB,CACpBnW,eACGF,GAECsW,EAAoB,IACrBD,EAAcnW,SACjB8K,GAAIX,GAEC,MF9qBexK,OAAOV,EAAWC,EAAUmX,KAC5C,MAAA5Y,UACJA,EAAY,SAAA0C,SACZA,EAAW,WAAAmW,WACXA,EAAa,GACbtW,SAAAA,GACEqW,EACEE,EAAkBD,EAAWxS,OAAO0S,SACpCxX,QAA+B,MAAlBgB,EAAS0L,WAAgB,EAAS1L,EAAS0L,MAAMxM,IAChE,IAAAe,QAAcD,EAASmL,gBAAgB,CACzClM,YACAC,WACAiB,cAEEzD,EACFA,EAAAC,EACAA,GACEmC,EAA2BmB,EAAOxC,EAAWuB,GAC7CyX,EAAoBhZ,EACpB0R,EAAiB,CAAE,EACnBuH,EAAa,EACjB,IAAA,IAASC,EAAI,EAAGA,EAAIJ,EAAgBvE,OAAQ2E,IAAK,CACzC,MAAA5d,KACJA,EAAAiW,GACAA,GACEuH,EAAgBI,IAElBja,EAAGka,EACHja,EAAGka,EAAAzL,KACHA,EAAAwH,MACAA,SACQ5D,EAAG,CACXtS,IACAC,IACA8T,iBAAkBhT,EAClBA,UAAWgZ,EACXtW,WACAgP,iBACAlP,QACAD,SAAAA,EACAE,SAAU,CACRjB,YACAC,cAGAxC,EAAS,MAATka,EAAgBA,EAAQla,EACxBC,EAAS,MAATka,EAAgBA,EAAQla,EACXwS,EAAA,IACZA,EACHpW,CAACA,GAAO,IACHoW,EAAepW,MACfqS,IAGHwH,GAAS8D,GAAc,KACzBA,IACqB,iBAAV9D,IACLA,EAAMnV,YACRgZ,EAAoB7D,EAAMnV,WAExBmV,EAAM3S,QACRA,GAAwB,IAAhB2S,EAAM3S,YAAuBD,EAASmL,gBAAgB,CAC5DlM,YACAC,WACAiB,aACGyS,EAAM3S,SAGXvD,IACAC,KACEmC,EAA2BmB,EAAOwW,EAAmBzX,KAEvD2X,GAAA,EAEV,CACS,MAAA,CACLja,IACAC,IACAc,UAAWgZ,EACXtW,WACAgP,iBACD,EE6lBM2H,CAAkB7X,EAAWC,EAAU,IACzCiX,EACHnW,SAAUoW,GACX,EC7uBH,IAAI7D,GAA4B,oBAAbnQ,SAA2B2U,EAAeA,gBAAG9b,EAASA,UAIzE,SAAS+b,GAAUjb,EAAGC,GACpB,GAAID,IAAMC,EACD,OAAA,EAEL,UAAOD,UAAaC,EACf,OAAA,EAEL,GAAa,mBAAND,GAAoBA,EAAEkb,aAAejb,EAAEib,WACzC,OAAA,EAEL,IAAAjF,EACA2E,EACAO,EACJ,GAAInb,GAAKC,GAAkB,iBAAND,EAAgB,CAC/B,GAAAL,MAAMyb,QAAQpb,GAAI,CAEhB,GADJiW,EAASjW,EAAEiW,OACPA,IAAWhW,EAAEgW,OAAe,OAAA,EAC3B,IAAA2E,EAAI3E,EAAgB,IAAR2E,KACX,IAACK,GAAUjb,EAAE4a,GAAI3a,EAAE2a,IACd,OAAA,EAGJ,OAAA,CACb,CAGI,GAFOO,EAAAtR,OAAOsR,KAAKnb,GACnBiW,EAASkF,EAAKlF,OACVA,IAAWpM,OAAOsR,KAAKlb,GAAGgW,OACrB,OAAA,EAEJ,IAAA2E,EAAI3E,EAAgB,IAAR2E,KACX,IAAC,CAAE,EAACS,eAAeC,KAAKrb,EAAGkb,EAAKP,IAC3B,OAAA,EAGN,IAAAA,EAAI3E,EAAgB,IAAR2E,KAAY,CACrB,MAAAW,EAAMJ,EAAKP,GACb,IAAQ,WAARW,IAAoBvb,EAAEwb,YAGrBP,GAAUjb,EAAEub,GAAMtb,EAAEsb,IAChB,OAAA,CAEf,CACW,OAAA,CACX,CACS,OAAAvb,GAAMA,GAAKC,GAAMA,CAC1B,CAEA,SAASwb,GAAO/W,GACV,GAAkB,oBAAXiB,OACF,OAAA,EAGT,OADYjB,EAAQyB,cAAcC,aAAeT,QACtC+V,kBAAoB,CACjC,CAEA,SAASC,GAAWjX,EAASpD,GACrB,MAAAsa,EAAMH,GAAO/W,GACnB,OAAOrE,KAAKE,MAAMe,EAAQsa,GAAOA,CACnC,CAEA,SAASC,GAAava,GACd,MAAAvD,EAAM+d,EAAY7d,OAACqD,GAIlB,OAHPkV,IAAM,KACJzY,EAAIP,QAAU8D,CAAA,IAETvD,CACT,CAMA,SAASge,GAAYhY,QACH,IAAZA,IACFA,EAAU,CAAE,GAER,MAAArC,UACJA,EAAY,SAAA0C,SACZA,EAAW,WAAAmW,WACXA,EAAa,GACbtW,SAAAA,EACAE,UACEjB,UAAW8Y,EACX7Y,SAAU8Y,GACR,CAAE,EAAAC,UACNA,GAAY,EAAAC,qBACZA,EAAAC,KACAA,GACErY,GACGsL,EAAMgN,GAAWC,WAAe,CACrC3b,EAAG,EACHC,EAAG,EACHwD,WACA1C,YACA0R,eAAgB,CAAE,EAClBmJ,cAAc,KAETC,EAAkBC,GAAuBH,EAAAA,SAAe/B,GAC1DU,GAAUuB,EAAkBjC,IAC/BkC,EAAoBlC,GAEtB,MAAOmC,EAAYC,GAAiBL,EAAAA,SAAe,OAC5CM,EAAWC,GAAgBP,EAAAA,SAAe,MAC3CQ,EAAeC,EAAiBvd,aAASqG,IACzCA,IAASmX,EAAaxf,UACxBwf,EAAaxf,QAAUqI,EACvB8W,EAAc9W,GACpB,GACK,IACGoX,EAAcF,EAAiBvd,aAASqG,IACxCA,IAASqX,EAAY1f,UACvB0f,EAAY1f,QAAUqI,EACtBgX,EAAahX,GACnB,GACK,IACGyK,EAAc0L,GAAqBU,EACnCS,EAAalB,GAAoBW,EACjCI,EAAelB,EAAY7d,OAAC,MAC5Bif,EAAcpB,EAAY7d,OAAC,MAC3Bmf,EAAUtB,EAAY7d,OAACoR,GACvBgO,EAAkD,MAAxBlB,EAC1BmB,EAA0BzB,GAAaM,GACvCoB,EAAc1B,GAAa5X,GAC3BuZ,EAAU3B,GAAaO,GACvBtM,EAASiN,EAAAA,aAAkB,KAC/B,IAAKC,EAAaxf,UAAY0f,EAAY1f,QACxC,OAEF,MAAM8c,EAAS,CACb5Y,YACA0C,WACAmW,WAAYiC,GAEVe,EAAY/f,UACd8c,EAAOrW,SAAWsZ,EAAY/f,SAEhB2c,GAAA6C,EAAaxf,QAAS0f,EAAY1f,QAAS8c,GAAQmD,MAAKpO,IACtE,MAAMqO,EAAW,IACZrO,EAKHkN,cAAkC,IAApBiB,EAAQhgB,SAEpBmgB,EAAangB,UAAYyd,GAAUmC,EAAQ5f,QAASkgB,KACtDN,EAAQ5f,QAAUkgB,EAClBE,EAAAA,WAAmB,KACjBvB,EAAQqB,EAAQ,IAE1B,GACK,GACA,CAAClB,EAAkB9a,EAAW0C,EAAUmZ,EAAaC,IACxDhH,IAAM,MACS,IAAT4F,GAAkBgB,EAAQ5f,QAAQ+e,eACpCa,EAAQ5f,QAAQ+e,cAAe,EAC/BF,GAAQhN,IAAS,IACZA,EACHkN,cAAc,MAEtB,GACK,CAACH,IACE,MAAAuB,EAAe7B,EAAY7d,QAAC,GAClCuY,IAAM,KACJmH,EAAangB,SAAU,EAChB,KACLmgB,EAAangB,SAAU,CAAA,IAExB,IACHgZ,IAAM,KAGJ,GAFIlG,MAA0B9S,QAAU8S,GACpC6M,MAAwB3f,QAAU2f,GAClC7M,GAAe6M,EAAY,CAC7B,GAAIG,EAAwB9f,QAC1B,OAAO8f,EAAwB9f,QAAQ8S,EAAa6M,EAAYrN,GAE1DA,GACd,IACK,CAACQ,EAAa6M,EAAYrN,EAAQwN,EAAyBD,IACxD,MAAAQ,EAAOC,EAAAA,SAAc,KAAO,CAChC5a,UAAW8Z,EACX7Z,SAAU+Z,EACVJ,eACAG,iBACE,CAACH,EAAcG,IACb9Y,EAAW2Z,EAAAA,SAAc,KAAO,CACpC5a,UAAWoN,EACXnN,SAAUga,KACR,CAAC7M,EAAa6M,IACZY,EAAiBD,EAAAA,SAAc,KACnC,MAAME,EAAgB,CACpB5Q,SAAUhJ,EACVtD,KAAM,EACNG,IAAK,GAEH,IAACkD,EAAShB,SACL,OAAA6a,EAET,MAAMrd,EAAIgb,GAAWxX,EAAShB,SAAUkM,EAAK1O,GACvCC,EAAI+a,GAAWxX,EAAShB,SAAUkM,EAAKzO,GAC7C,OAAIsb,EACK,IACF8B,EACH9B,UAAW,aAAevb,EAAI,OAASC,EAAI,SACvC6a,GAAOtX,EAAShB,WAAa,KAAO,CACtC6E,WAAY,cAIX,CACLoF,SAAUhJ,EACVtD,KAAMH,EACNM,IAAKL,EACN,GACA,CAACwD,EAAU8X,EAAW/X,EAAShB,SAAUkM,EAAK1O,EAAG0O,EAAKzO,IAClDkd,OAAAA,EAAaG,SAAC,KAAO,IACvB5O,EACHS,SACA+N,OACA1Z,WACA4Z,oBACE,CAAC1O,EAAMS,EAAQ+N,EAAM1Z,EAAU4Z,GACrC,CAQA,MAAMG,GAAqBna,IAIlB,CACL/G,KAAM,QACN+G,UACA,EAAAkP,CAAGnP,GACK,MAAAY,QACJA,EAAAjC,QACAA,GACqB,mBAAZsB,EAAyBA,EAAQD,GAASC,EACjD,OAAAW,IAXOpD,EAWUoD,EAVhB,CAAE,EAAC2W,eAAeC,KAAKha,EAAO,YAWV,MAAnBoD,EAAQlH,QACH2gB,GAAQ,CACbzZ,QAASA,EAAQlH,QACjBiF,YACCwQ,GAAGnP,GAED,CAAE,EAEPY,EACKyZ,GAAQ,CACbzZ,UACAjC,YACCwQ,GAAGnP,GAED,CAAE,EA1Bb,IAAexC,CA2BjB,IAWM0R,GAAS,CAACjP,EAASqa,KAAU,IAC9BC,GAASta,GACZA,QAAS,CAACA,EAASqa,KAQftK,GAAQ,CAAC/P,EAASqa,KAAU,IAC7BE,GAAQva,GACXA,QAAS,CAACA,EAASqa,KAMfzE,GAAa,CAAC5V,EAASqa,KAAU,IAClCG,GAAaxa,GAChBA,QAAS,CAACA,EAASqa,KASf5J,GAAO,CAACzQ,EAASqa,KAAU,IAC5BI,GAAOza,GACVA,QAAS,CAACA,EAASqa,KASfjH,GAAO,CAACpT,EAASqa,KAAU,IAC5BK,GAAO1a,GACVA,QAAS,CAACA,EAASqa,KAmBf9F,GAAO,CAACvU,EAASqa,KAAU,IAC5BM,GAAO3a,GACVA,QAAS,CAACA,EAASqa,KAmBfxK,GAAQ,CAAC7P,EAASqa,KAAU,IAC7BF,GAAQna,GACXA,QAAS,CAACA,EAASqa","x_google_ignoreList":[0,1,2,3,4,5]}