{"version":3,"file":"DetalhesProduto-B7Epe-E9.js","sources":["../../src/pages/DetalhesProduto.jsx"],"sourcesContent":["// imports obrigatorios que todo mundo copia e cola\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom'; // pra navegar e pegar parametros\nimport { useProdutos } from '@/contexts/ContextoProduto'; // contexto dos produtos\nimport { Botao } from '@/components/ui/botao'; // botao generico\nimport { GrupoRadio, ItemGrupoRadio } from '@/components/ui/grupo-radio'; // botoes de opcao\nimport { Label } from '@/components/ui/rotulo'; // rotulo bonitinho\n// icones do lucide que todo mundo usa\nimport { ChevronLeft, ChevronRight, ShoppingCart, Star, CheckCircle, Heart } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion'; // animacoes inuteis\nimport { useNotificacao } from \"@/components/ui/useNotificacao\"; // notificacoes bonitas\nimport LoadingSpinner from '@/components/SpinnerCarregamento'; // spinner de loading\nimport CartaoProduto from '@/components/CartaoProduto'; // card do produto\n\n// ==============================\n// PAGINA DE DETALHES DO PRODUTO\n// ==============================\n// mostra os detalhes de um produto\n// se nao carregar, azar o seu\nconst ProductDetailPage = () => {\n  // pega o id do produto da URL\n  // se nao tiver, ferrou\n  // #404 #paginaNaoEncontrada\n  const { productId } = useParams();\n  const { getProductById, produtos } = useProdutos();\n  const { notificar } = useNotificacao();\n\n  // estado do produto\n  // comeca como null e so deus sabe quando vai carregar\n  // #loadingInfinito #vaiSaber\n  const [product, setProduct] = useState(null);\n  // estados pra controlar o que o usuario selecionou\n  // se nao selecionar, o botao fica triste\n  const [selectedSize, setSelectedSize] = useState('');\n  const [selectedColor, setSelectedColor] = useState('');\n  // quantidade comeca em 1\n  // porque ninguem quer comprar 0 produtos, ne?\n\n  const [quantity, setQuantity] = useState(1);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\n  const [productImages, setProductImages] = useState([]);\n\n  // quando o componente carrega, busca o produto\n  // se der erro, ja era\n \n  // efeito que roda quando o id do produto muda\n  // ou quando o getProductById muda (spoiler: nunca muda)\n  useEffect(() => {\n    // funcao assincrona que busca o produto\n    // se der erro, foda-se\n    const fetchProduct = async () => {\n      setIsLoading(true); // ativa o loading\n      const fetchedProduct = await getProductById(productId); // busca o produto\n      if (fetchedProduct) {\n        // se achou o produto, atualiza o estado\n        setProduct(fetchedProduct);\n        // pega as imagens do produto\n        // que as vezes nao existem\n        setProductImages(getProductImages(fetchedProduct));\n      }\n      // desativa o loading, independente de ter dado certo ou nao\n\n      setIsLoading(false);\n    };\n    // chama a funcao\n    // sem try/catch porque somos corajosos\n    fetchProduct();\n  }, [productId, getProductById]); // depende do id do produto e da funcao getProductById\n\n  // pega todas as imagens do produto\n  // se tiver, claro\n  const getProductImages = (product) => {\n    const images = []; // array vazio\n    // adiciona cada imagem que existir\n    // optional chaining pra nao dar erro\n    if (product?.image) images.push(product.image);\n    if (product?.image2) images.push(product.image2);\n    if (product?.image3) images.push(product.image3);\n    if (product?.image4) images.push(product.image4);\n    // retorna o array de imagens\n    // pode voltar vazio, mas quem liga?\n    return images;\n  };\n\n  // funcao que adiciona o produto ao carrinho\n  // se faltar algo, o usuario fica puto\n  const handleAddToCart = () => {\n    // verifica se o usuario selecionou tamanho e cor\n    // se nao selecionou, mostra um erro\n    if (!selectedSize || !selectedColor) {\n      notificar('Por favor, selecione tamanho e cor.', 'erro');\n      return; // sai da funcao\n    }\n    // se chegou aqui, é porque ta tudo certo\n    // mostra mensagem de sucesso\n    // (mas nao adiciona de verdade no carrinho, claro)\n    notificar('Produto adicionado ao carrinho!', 'sucesso');\n  };\n\n  // funcao que é chamada quando a imagem termina de carregar\n  // so pra mostrar que ta carregado mesmo\n  const handleImageLoad = () => {\n    setIsImageLoaded(true); // imagem carregou\n  };\n\n  // vai pra proxima imagem\n  // se chegar no fim, volta pro comeco\n  const nextImage = () => {\n    // pega o indice atual, soma 1 e faz modulo pelo tamanho do array\n    // isso faz voltar pro comeco quando chegar no fim\n    setCurrentImageIndex((prev) => (prev + 1) % productImages.length);\n    // reseta o estado de carregamento\n    setIsImageLoaded(false);\n  };\n\n  // vai pra imagem anterior\n  // se estiver na primeira, vai pra ultima\n  const prevImage = () => {\n    setCurrentImageIndex((prev) =>\n      // se for o primeiro, vai pro ultimo\n      // senao, vai pro anterior\n      prev === 0 ? productImages.length - 1 : prev - 1\n    );\n    // reseta o estado de carregamento\n    setIsImageLoaded(false);\n  };\n\n  // se estiver carregando, mostra o spinner\n  // porque o usuario adora esperar\n  if (isLoading) {\n    return <LoadingSpinner />; // spinner bonitinho\n  }\n\n  if (!product) {\n    return <div className=\"text-center text-red-500\">Produto não encontrado.</div>;\n  }\n\n  return (\n    <div className=\"div-container div-espacada\">\n      <div className=\"div-espacada\">\n        <div className=\"grid md:grid-cols-2 gap-8\">\n          {/* Imagens do Produto */}\n          <div className=\"relative\">\n            <AnimatePresence initial={false}>\n              <motion.img\n                key={currentImageIndex}\n                src={productImages[currentImageIndex]}\n                alt={`Imagem ${currentImageIndex + 1}`}\n                className=\"w-full h-auto rounded-2xl object-cover shadow\"\n                initial={{ opacity: 0.3 }}\n                animate={{ opacity: isImageLoaded ? 1 : 0.3 }}\n                exit={{ opacity: 0 }}\n                transition={{ duration: 0.5 }}\n                onLoad={handleImageLoad}\n              />\n            </AnimatePresence>\n\n            {/* Navegação de imagens */}\n            {productImages.length > 1 && (\n              <>\n                <button\n                  onClick={prevImage}\n                  className=\"absolute top-1/2 left-0 p-2 bg-white rounded-full shadow -translate-y-1/2\"\n                >\n                  <ChevronLeft />\n                </button>\n                <button\n                  onClick={nextImage}\n                  className=\"absolute top-1/2 right-0 p-2 bg-white rounded-full shadow -translate-y-1/2\"\n                >\n                  <ChevronRight />\n                </button>\n              </>\n            )}\n          </div>\n\n          {/* Detalhes do Produto */}\n          <div className=\"div-espacada\">\n            <h1 className=\"text-3xl font-bold\">{product.name}</h1>\n            <p className=\"text-xl text-green-600 font-semibold\">R$ {Number(product.price)?.toFixed(2)}</p>\n\n            <div className=\"flex items-center gap-2\">\n              <Star className=\"text-yellow-500\" />\n              <span>{product.rating ?? '4.5'}</span>\n              <span className=\"text-sm text-gray-500\">(200 avaliações)</span>\n            </div>\n\n            {/* Tamanhos */}\n            <div>\n              <Label>Tamanho</Label>\n              <GrupoRadio\n                value={selectedSize}\n                onValueChange={setSelectedSize}\n                className=\"flex gap-2 mt-1\"\n              >\n                {Array.isArray(product.sizes) && product.sizes.length > 0 ? (\n                  product.sizes.map((size) => (\n                    <ItemGrupoRadio key={size} value={size}>\n                      {size}\n                    </ItemGrupoRadio>\n                  ))\n                ) : (\n                  <span className=\"text-gray-400 text-sm\">Sem tamanhos disponíveis</span>\n                )}\n              </GrupoRadio>\n            </div>\n\n            {/* Cores */}\n            <div>\n              <Label>Cor</Label>\n              <GrupoRadio\n                value={selectedColor}\n                onValueChange={setSelectedColor}\n                className=\"flex gap-2 mt-1\"\n              >\n                {['Preto', 'Branco', 'Azul'].map((color) => (\n                  <ItemGrupoRadio key={color} value={color}>\n                    {color}\n                  </ItemGrupoRadio>\n                ))}\n              </GrupoRadio>\n            </div>\n\n            {/* Ações */}\n            <div className=\"flex items-center gap-4\">\n              <Botao onClick={handleAddToCart}>\n                <ShoppingCart className=\"mr-2\" size={18} />\n                Adicionar ao carrinho\n              </Botao>\n              <button onClick={() => setIsFavorite(!isFavorite)}>\n                <Heart className={isFavorite ? 'text-red-500' : 'text-gray-400'} />\n              </button>\n            </div>\n\n            <p className=\"text-gray-600\">{product.description}</p>\n          </div>\n        </div>\n\n        {/* Produtos relacionados */}\n        <div className=\"div-espacada\">\n          <h2 className=\"text-2xl font-semibold mb-4\">Produtos Relacionados</h2>\n          <div className=\"div-espacada\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4\">\n              {produtos.slice(0, 4).map((produtoRelacionado) => (\n                <CartaoProduto key={produtoRelacionado.id} product={produtoRelacionado} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductDetailPage;\n"],"names":["ProductDetailPage","productId","useParams","getProductById","produtos","useProdutos","notificar","useNotificacao","product","setProduct","useState","selectedSize","setSelectedSize","selectedColor","setSelectedColor","quantity","setQuantity","currentImageIndex","setCurrentImageIndex","isFavorite","setIsFavorite","isLoading","setIsLoading","isImageLoaded","setIsImageLoaded","productImages","setProductImages","useEffect","async","fetchedProduct","getProductImages","fetchProduct","images","product2","image","push","image2","image3","image4","LoadingSpinner","className","children","jsxs","jsx","AnimatePresence","initial","jsxRuntimeExports","motion","img","src","alt","opacity","animate","exit","transition","duration","onLoad","length","Fragment","onClick","prev","ChevronLeft","ChevronRight","name","_a","Number","price","toFixed","Star","rating","Label","GrupoRadio","value","onValueChange","Array","isArray","sizes","map","size","ItemGrupoRadio","color","Botao","ShoppingCart","Heart","description","slice","produtoRelacionado","CartaoProduto","id"],"mappings":"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"}