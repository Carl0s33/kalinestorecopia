{"version":3,"file":"grupo-radio-BVTEp6I9.js","sources":["../../node_modules/@radix-ui/react-radio-group/node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/@radix-ui/react-radio-group/node_modules/@radix-ui/react-primitive/dist/index.mjs","../../node_modules/@radix-ui/react-direction/dist/index.mjs","../../node_modules/@radix-ui/react-radio-group/node_modules/@radix-ui/react-roving-focus/dist/index.mjs","../../node_modules/@radix-ui/react-radio-group/node_modules/@radix-ui/react-collection/dist/index.mjs","../../node_modules/@radix-ui/react-use-previous/dist/index.mjs","../../node_modules/@radix-ui/react-radio-group/dist/index.mjs","../../src/components/ui/grupo-radio.jsx"],"sourcesContent":["// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/direction/src/direction.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DirectionContext = React.createContext(void 0);\nvar DirectionProvider = (props) => {\n  const { dir, children } = props;\n  return /* @__PURE__ */ jsx(DirectionContext.Provider, { value: dir, children });\n};\nfunction useDirection(localDir) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\nvar Provider = DirectionProvider;\nexport {\n  DirectionProvider,\n  Provider,\n  useDirection\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/roving-focus-group.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ENTRY_FOCUS = \"rovingFocusGroup.onEntryFocus\";\nvar EVENT_OPTIONS = { bubbles: false, cancelable: true };\nvar GROUP_NAME = \"RovingFocusGroup\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(GROUP_NAME);\nvar [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\nvar [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);\nvar RovingFocusGroup = React.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ jsx(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ jsx(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ jsx(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });\n  }\n);\nRovingFocusGroup.displayName = GROUP_NAME;\nvar RovingFocusGroupImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId ?? null,\n    onChange: onCurrentTabStopIdChange,\n    caller: GROUP_NAME\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n  return /* @__PURE__ */ jsx(\n    RovingFocusProvider,\n    {\n      scope: __scopeRovingFocusGroup,\n      orientation,\n      dir: direction,\n      loop,\n      currentTabStopId,\n      onItemFocus: React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      ),\n      onItemShiftTab: React.useCallback(() => setIsTabbingBackOut(true), []),\n      onFocusableItemAdd: React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      ),\n      onFocusableItemRemove: React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      ),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,\n          \"data-orientation\": orientation,\n          ...groupProps,\n          ref: composedRefs,\n          style: { outline: \"none\", ...props.style },\n          onMouseDown: composeEventHandlers(props.onMouseDown, () => {\n            isClickFocusRef.current = true;\n          }),\n          onFocus: composeEventHandlers(props.onFocus, (event) => {\n            const isKeyboardFocus = !isClickFocusRef.current;\n            if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n              const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n              event.currentTarget.dispatchEvent(entryFocusEvent);\n              if (!entryFocusEvent.defaultPrevented) {\n                const items = getItems().filter((item) => item.focusable);\n                const activeItem = items.find((item) => item.active);\n                const currentItem = items.find((item) => item.id === currentTabStopId);\n                const candidateItems = [activeItem, currentItem, ...items].filter(\n                  Boolean\n                );\n                const candidateNodes = candidateItems.map((item) => item.ref.current);\n                focusFirst(candidateNodes, preventScrollOnEntryFocus);\n              }\n            }\n            isClickFocusRef.current = false;\n          }),\n          onBlur: composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))\n        }\n      )\n    }\n  );\n});\nvar ITEM_NAME = \"RovingFocusGroupItem\";\nvar RovingFocusGroupItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      children,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n    const { onFocusableItemAdd, onFocusableItemRemove, currentTabStopId } = context;\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n    return /* @__PURE__ */ jsx(\n      Collection.ItemSlot,\n      {\n        scope: __scopeRovingFocusGroup,\n        id,\n        focusable,\n        active,\n        children: /* @__PURE__ */ jsx(\n          Primitive.span,\n          {\n            tabIndex: isCurrentTabStop ? 0 : -1,\n            \"data-orientation\": context.orientation,\n            ...itemProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!focusable) event.preventDefault();\n              else context.onItemFocus(id);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => context.onItemFocus(id)),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if (event.key === \"Tab\" && event.shiftKey) {\n                context.onItemShiftTab();\n                return;\n              }\n              if (event.target !== event.currentTarget) return;\n              const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n              if (focusIntent !== void 0) {\n                if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n                event.preventDefault();\n                const items = getItems().filter((item) => item.focusable);\n                let candidateNodes = items.map((item) => item.ref.current);\n                if (focusIntent === \"last\") candidateNodes.reverse();\n                else if (focusIntent === \"prev\" || focusIntent === \"next\") {\n                  if (focusIntent === \"prev\") candidateNodes.reverse();\n                  const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                  candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);\n                }\n                setTimeout(() => focusFirst(candidateNodes));\n              }\n            }),\n            children: typeof children === \"function\" ? children({ isCurrentTabStop, hasTabStop: currentTabStopId != null }) : children\n          }\n        )\n      }\n    );\n  }\n);\nRovingFocusGroupItem.displayName = ITEM_NAME;\nvar MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nfunction getDirectionAwareKey(key, dir) {\n  if (dir !== \"rtl\") return key;\n  return key === \"ArrowLeft\" ? \"ArrowRight\" : key === \"ArrowRight\" ? \"ArrowLeft\" : key;\n}\nfunction getFocusIntent(event, orientation, dir) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === \"vertical\" && [\"ArrowLeft\", \"ArrowRight\"].includes(key)) return void 0;\n  if (orientation === \"horizontal\" && [\"ArrowUp\", \"ArrowDown\"].includes(key)) return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\nfunction focusFirst(candidates, preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\nvar Root = RovingFocusGroup;\nvar Item = RovingFocusGroupItem;\nexport {\n  Item,\n  Root,\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  createRovingFocusGroupScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/collection-legacy.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createCollection(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }\n  );\n  const CollectionProvider = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef(null);\n    const itemMap = React.useRef(/* @__PURE__ */ new Map()).current;\n    return /* @__PURE__ */ jsx(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...itemData });\n        return () => void context.itemMap.delete(ref);\n      });\n      return /* @__PURE__ */ jsx(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useCollection(scope) {\n    const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n    return getItems;\n  }\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope\n  ];\n}\n\n// src/collection.tsx\nimport React2 from \"react\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createSlot as createSlot2 } from \"@radix-ui/react-slot\";\n\n// src/ordered-dictionary.ts\nvar __instanciated = /* @__PURE__ */ new WeakMap();\nvar OrderedDict = class _OrderedDict extends Map {\n  #keys;\n  constructor(entries) {\n    super(entries);\n    this.#keys = [...super.keys()];\n    __instanciated.set(this, true);\n  }\n  set(key, value) {\n    if (__instanciated.get(this)) {\n      if (this.has(key)) {\n        this.#keys[this.#keys.indexOf(key)] = key;\n      } else {\n        this.#keys.push(key);\n      }\n    }\n    super.set(key, value);\n    return this;\n  }\n  insert(index, key, value) {\n    const has = this.has(key);\n    const length = this.#keys.length;\n    const relativeIndex = toSafeInteger(index);\n    let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n    if (safeIndex === this.size || has && safeIndex === this.size - 1 || safeIndex === -1) {\n      this.set(key, value);\n      return this;\n    }\n    const size = this.size + (has ? 0 : 1);\n    if (relativeIndex < 0) {\n      actualIndex++;\n    }\n    const keys = [...this.#keys];\n    let nextValue;\n    let shouldSkip = false;\n    for (let i = actualIndex; i < size; i++) {\n      if (actualIndex === i) {\n        let nextKey = keys[i];\n        if (keys[i] === key) {\n          nextKey = keys[i + 1];\n        }\n        if (has) {\n          this.delete(key);\n        }\n        nextValue = this.get(nextKey);\n        this.set(key, value);\n      } else {\n        if (!shouldSkip && keys[i - 1] === key) {\n          shouldSkip = true;\n        }\n        const currentKey = keys[shouldSkip ? i : i - 1];\n        const currentValue = nextValue;\n        nextValue = this.get(currentKey);\n        this.delete(currentKey);\n        this.set(currentKey, currentValue);\n      }\n    }\n    return this;\n  }\n  with(index, key, value) {\n    const copy = new _OrderedDict(this);\n    copy.insert(index, key, value);\n    return copy;\n  }\n  before(key) {\n    const index = this.#keys.indexOf(key) - 1;\n    if (index < 0) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position before the given key.\n   */\n  setBefore(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index, newKey, value);\n  }\n  after(key) {\n    let index = this.#keys.indexOf(key);\n    index = index === -1 || index === this.size - 1 ? -1 : index + 1;\n    if (index === -1) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position after the given key.\n   */\n  setAfter(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index + 1, newKey, value);\n  }\n  first() {\n    return this.entryAt(0);\n  }\n  last() {\n    return this.entryAt(-1);\n  }\n  clear() {\n    this.#keys = [];\n    return super.clear();\n  }\n  delete(key) {\n    const deleted = super.delete(key);\n    if (deleted) {\n      this.#keys.splice(this.#keys.indexOf(key), 1);\n    }\n    return deleted;\n  }\n  deleteAt(index) {\n    const key = this.keyAt(index);\n    if (key !== void 0) {\n      return this.delete(key);\n    }\n    return false;\n  }\n  at(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return this.get(key);\n    }\n  }\n  entryAt(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return [key, this.get(key)];\n    }\n  }\n  indexOf(key) {\n    return this.#keys.indexOf(key);\n  }\n  keyAt(index) {\n    return at(this.#keys, index);\n  }\n  from(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.at(dest);\n  }\n  keyFrom(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.keyAt(dest);\n  }\n  find(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return entry;\n      }\n      index++;\n    }\n    return void 0;\n  }\n  findIndex(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }\n  filter(predicate, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        entries.push(entry);\n      }\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  map(callbackfn, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      entries.push([entry[0], Reflect.apply(callbackfn, thisArg, [entry, index, this])]);\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  reduce(...args) {\n    const [callbackfn, initialValue] = args;\n    let index = 0;\n    let accumulator = initialValue ?? this.at(0);\n    for (const entry of this) {\n      if (index === 0 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n      index++;\n    }\n    return accumulator;\n  }\n  reduceRight(...args) {\n    const [callbackfn, initialValue] = args;\n    let accumulator = initialValue ?? this.at(-1);\n    for (let index = this.size - 1; index >= 0; index--) {\n      const entry = this.at(index);\n      if (index === this.size - 1 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n    }\n    return accumulator;\n  }\n  toSorted(compareFn) {\n    const entries = [...this.entries()].sort(compareFn);\n    return new _OrderedDict(entries);\n  }\n  toReversed() {\n    const reversed = new _OrderedDict();\n    for (let index = this.size - 1; index >= 0; index--) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      reversed.set(key, element);\n    }\n    return reversed;\n  }\n  toSpliced(...args) {\n    const entries = [...this.entries()];\n    entries.splice(...args);\n    return new _OrderedDict(entries);\n  }\n  slice(start, end) {\n    const result = new _OrderedDict();\n    let stop = this.size - 1;\n    if (start === void 0) {\n      return result;\n    }\n    if (start < 0) {\n      start = start + this.size;\n    }\n    if (end !== void 0 && end > 0) {\n      stop = end - 1;\n    }\n    for (let index = start; index <= stop; index++) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      result.set(key, element);\n    }\n    return result;\n  }\n  every(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (!Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return false;\n      }\n      index++;\n    }\n    return true;\n  }\n  some(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return true;\n      }\n      index++;\n    }\n    return false;\n  }\n};\nfunction at(array, index) {\n  if (\"at\" in Array.prototype) {\n    return Array.prototype.at.call(array, index);\n  }\n  const actualIndex = toSafeIndex(array, index);\n  return actualIndex === -1 ? void 0 : array[actualIndex];\n}\nfunction toSafeIndex(array, index) {\n  const length = array.length;\n  const relativeIndex = toSafeInteger(index);\n  const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n  return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n}\nfunction toSafeInteger(number) {\n  return number !== number || number === 0 ? 0 : Math.trunc(number);\n}\n\n// src/collection.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nfunction createCollection2(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope2(PROVIDER_NAME);\n  const [CollectionContextProvider, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    {\n      collectionElement: null,\n      collectionRef: { current: null },\n      collectionRefObject: { current: null },\n      itemMap: new OrderedDict(),\n      setItemMap: () => void 0\n    }\n  );\n  const CollectionProvider = ({ state, ...props }) => {\n    return state ? /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state }) : /* @__PURE__ */ jsx2(CollectionInit, { ...props });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const CollectionInit = (props) => {\n    const state = useInitCollection();\n    return /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state });\n  };\n  CollectionInit.displayName = PROVIDER_NAME + \"Init\";\n  const CollectionProviderImpl = (props) => {\n    const { scope, children, state } = props;\n    const ref = React2.useRef(null);\n    const [collectionElement, setCollectionElement] = React2.useState(\n      null\n    );\n    const composeRefs = useComposedRefs2(ref, setCollectionElement);\n    const [itemMap, setItemMap] = state;\n    React2.useEffect(() => {\n      if (!collectionElement) return;\n      const observer = getChildListObserver(() => {\n      });\n      observer.observe(collectionElement, {\n        childList: true,\n        subtree: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }, [collectionElement]);\n    return /* @__PURE__ */ jsx2(\n      CollectionContextProvider,\n      {\n        scope,\n        itemMap,\n        setItemMap,\n        collectionRef: composeRefs,\n        collectionRefObject: ref,\n        collectionElement,\n        children\n      }\n    );\n  };\n  CollectionProviderImpl.displayName = PROVIDER_NAME + \"Impl\";\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot2(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs2(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx2(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot2(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React2.useRef(null);\n      const [element, setElement] = React2.useState(null);\n      const composedRefs = useComposedRefs2(forwardedRef, ref, setElement);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      const { setItemMap } = context;\n      const itemDataRef = React2.useRef(itemData);\n      if (!shallowEqual(itemDataRef.current, itemData)) {\n        itemDataRef.current = itemData;\n      }\n      const memoizedItemData = itemDataRef.current;\n      React2.useEffect(() => {\n        const itemData2 = memoizedItemData;\n        setItemMap((map) => {\n          if (!element) {\n            return map;\n          }\n          if (!map.has(element)) {\n            map.set(element, { ...itemData2, element });\n            return map.toSorted(sortByDocumentPosition);\n          }\n          return map.set(element, { ...itemData2, element }).toSorted(sortByDocumentPosition);\n        });\n        return () => {\n          setItemMap((map) => {\n            if (!element || !map.has(element)) {\n              return map;\n            }\n            map.delete(element);\n            return new OrderedDict(map);\n          });\n        };\n      }, [element, memoizedItemData, setItemMap]);\n      return /* @__PURE__ */ jsx2(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useInitCollection() {\n    return React2.useState(new OrderedDict());\n  }\n  function useCollection(scope) {\n    const { itemMap } = useCollectionContext(name + \"CollectionConsumer\", scope);\n    return itemMap;\n  }\n  const functions = {\n    createCollectionScope,\n    useCollection,\n    useInitCollection\n  };\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    functions\n  ];\n}\nfunction shallowEqual(a, b) {\n  if (a === b) return true;\n  if (typeof a !== \"object\" || typeof b !== \"object\") return false;\n  if (a == null || b == null) return false;\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    if (a[key] !== b[key]) return false;\n  }\n  return true;\n}\nfunction isElementPreceding(a, b) {\n  return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);\n}\nfunction sortByDocumentPosition(a, b) {\n  return !a[1].element || !b[1].element ? 0 : isElementPreceding(a[1].element, b[1].element) ? -1 : 1;\n}\nfunction getChildListObserver(callback) {\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        callback();\n        return;\n      }\n    }\n  });\n  return observer;\n}\nexport {\n  createCollection,\n  createCollection2 as unstable_createCollection\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-previous/src/use-previous.tsx\nimport * as React from \"react\";\nfunction usePrevious(value) {\n  const ref = React.useRef({ value, previous: value });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/radio-group.tsx\nimport * as React2 from \"react\";\nimport { composeEventHandlers as composeEventHandlers2 } from \"@radix-ui/primitive\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { Primitive as Primitive2 } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection } from \"@radix-ui/react-direction\";\n\n// src/radio.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar RADIO_NAME = \"Radio\";\nvar [createRadioContext, createRadioScope] = createContextScope(RADIO_NAME);\nvar [RadioProvider, useRadioContext] = createRadioContext(RADIO_NAME);\nvar Radio = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadio,\n      name,\n      checked = false,\n      required,\n      disabled,\n      value = \"on\",\n      onCheck,\n      form,\n      ...radioProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    return /* @__PURE__ */ jsxs(RadioProvider, { scope: __scopeRadio, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"radio\",\n          \"aria-checked\": checked,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...radioProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            if (!checked) onCheck?.();\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        RadioBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nRadio.displayName = RADIO_NAME;\nvar INDICATOR_NAME = \"RadioIndicator\";\nvar RadioIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadio, forceMount, ...indicatorProps } = props;\n    const context = useRadioContext(INDICATOR_NAME, __scopeRadio);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.checked, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nRadioIndicator.displayName = INDICATOR_NAME;\nvar BUBBLE_INPUT_NAME = \"RadioBubbleInput\";\nvar RadioBubbleInput = React.forwardRef(\n  ({\n    __scopeRadio,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      Primitive.input,\n      {\n        type: \"radio\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nRadioBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\n\n// src/radio-group.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nvar ARROW_KEYS = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\nvar RADIO_GROUP_NAME = \"RadioGroup\";\nvar [createRadioGroupContext, createRadioGroupScope] = createContextScope2(RADIO_GROUP_NAME, [\n  createRovingFocusGroupScope,\n  createRadioScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar useRadioScope = createRadioScope();\nvar [RadioGroupProvider, useRadioGroupContext] = createRadioGroupContext(RADIO_GROUP_NAME);\nvar RadioGroup = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRadioGroup,\n      name,\n      defaultValue,\n      value: valueProp,\n      required = false,\n      disabled = false,\n      orientation,\n      dir,\n      loop = true,\n      onValueChange,\n      ...groupProps\n    } = props;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? null,\n      onChange: onValueChange,\n      caller: RADIO_GROUP_NAME\n    });\n    return /* @__PURE__ */ jsx2(\n      RadioGroupProvider,\n      {\n        scope: __scopeRadioGroup,\n        name,\n        required,\n        disabled,\n        value,\n        onValueChange: setValue,\n        children: /* @__PURE__ */ jsx2(\n          RovingFocusGroup.Root,\n          {\n            asChild: true,\n            ...rovingFocusGroupScope,\n            orientation,\n            dir: direction,\n            loop,\n            children: /* @__PURE__ */ jsx2(\n              Primitive2.div,\n              {\n                role: \"radiogroup\",\n                \"aria-required\": required,\n                \"aria-orientation\": orientation,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                dir: direction,\n                ...groupProps,\n                ref: forwardedRef\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroup.displayName = RADIO_GROUP_NAME;\nvar ITEM_NAME = \"RadioGroupItem\";\nvar RadioGroupItem = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, disabled, ...itemProps } = props;\n    const context = useRadioGroupContext(ITEM_NAME, __scopeRadioGroup);\n    const isDisabled = context.disabled || disabled;\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeRadioGroup);\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs2(forwardedRef, ref);\n    const checked = context.value === itemProps.value;\n    const isArrowKeyPressedRef = React2.useRef(false);\n    React2.useEffect(() => {\n      const handleKeyDown = (event) => {\n        if (ARROW_KEYS.includes(event.key)) {\n          isArrowKeyPressedRef.current = true;\n        }\n      };\n      const handleKeyUp = () => isArrowKeyPressedRef.current = false;\n      document.addEventListener(\"keydown\", handleKeyDown);\n      document.addEventListener(\"keyup\", handleKeyUp);\n      return () => {\n        document.removeEventListener(\"keydown\", handleKeyDown);\n        document.removeEventListener(\"keyup\", handleKeyUp);\n      };\n    }, []);\n    return /* @__PURE__ */ jsx2(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !isDisabled,\n        active: checked,\n        children: /* @__PURE__ */ jsx2(\n          Radio,\n          {\n            disabled: isDisabled,\n            required: context.required,\n            checked,\n            ...radioScope,\n            ...itemProps,\n            name: context.name,\n            ref: composedRefs,\n            onCheck: () => context.onValueChange(itemProps.value),\n            onKeyDown: composeEventHandlers2((event) => {\n              if (event.key === \"Enter\") event.preventDefault();\n            }),\n            onFocus: composeEventHandlers2(itemProps.onFocus, () => {\n              if (isArrowKeyPressedRef.current) ref.current?.click();\n            })\n          }\n        )\n      }\n    );\n  }\n);\nRadioGroupItem.displayName = ITEM_NAME;\nvar INDICATOR_NAME2 = \"RadioGroupIndicator\";\nvar RadioGroupIndicator = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeRadioGroup, ...indicatorProps } = props;\n    const radioScope = useRadioScope(__scopeRadioGroup);\n    return /* @__PURE__ */ jsx2(RadioIndicator, { ...radioScope, ...indicatorProps, ref: forwardedRef });\n  }\n);\nRadioGroupIndicator.displayName = INDICATOR_NAME2;\nvar Root2 = RadioGroup;\nvar Item2 = RadioGroupItem;\nvar Indicator = RadioGroupIndicator;\nexport {\n  Indicator,\n  Item2 as Item,\n  RadioGroup,\n  RadioGroupIndicator,\n  RadioGroupItem,\n  Root2 as Root,\n  createRadioGroupScope\n};\n//# sourceMappingURL=index.mjs.map\n","// Componente de grupo de rádio reutilizável e acessível\r\n// Utiliza @radix-ui/react-radio-group para acessibilidade.\r\n\r\nimport React from 'react';\r\nimport * as RadioGroupPrimitive from '@radix-ui/react-radio-group';\r\nimport { cn } from '@/lib/utilitarios';\r\n\r\n// Componente raiz que agrupa os itens\r\nconst GrupoRadio = React.forwardRef(({ className, ...props }, ref) => (\r\n  <RadioGroupPrimitive.Root\r\n    ref={ref}\r\n    className={cn('flex gap-2', className)}\r\n    {...props}\r\n  />\r\n));\r\nGrupoRadio.displayName = RadioGroupPrimitive.Root.displayName;\r\n\r\n// Cada opção de rádio (ex.: tamanho \"38\")\r\nconst ItemGrupoRadio = React.forwardRef(\r\n  ({ className, children, value, ...props }, ref) => (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      value={value}\r\n      aria-label={value}\r\n      className={cn(\r\n        // layout\r\n        'px-2 py-1 min-w-[2.5rem] text-center text-sm font-medium rounded-md',\r\n        'border border-primary ring-offset-background select-none',\r\n        // estados\r\n        'data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\r\n        'data-[state=unchecked]:bg-background data-[state=unchecked]:text-primary',\r\n        // acessibilidade\r\n        'focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\r\n        'disabled:cursor-not-allowed disabled:opacity-50',\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children ?? value}\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n);\r\nItemGrupoRadio.displayName = RadioGroupPrimitive.Item.displayName;\r\n\r\nexport { GrupoRadio, ItemGrupoRadio };"],"names":["createSlot","ownerName","SlotClone","Slot2","React.forwardRef","props","forwardedRef","children","slotProps","childrenArray","React.Children","toArray","slottable","find","isSlottable","newElement","newChildren","map","child","Children","count","only","React.isValidElement","jsx","ref","isValidElement","React.cloneElement","displayName","createSlotClone","childrenRef","element","getter","_a","Object","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","_b","getElementRef","props2","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","result","filter","Boolean","join","mergeProps","type","React.Fragment","composeRefs","cloneElement","SLOTTABLE_IDENTIFIER","Symbol","__radixId","Primitive","reduce","primitive","node","Slot","Node","asChild","primitiveProps","Comp","window","for","DirectionContext","React.createContext","createContext","useDirection","localDir","globalDir","React.useContext","useContext","ENTRY_FOCUS","EVENT_OPTIONS","bubbles","cancelable","GROUP_NAME","Collection","useCollection","createCollectionScope","name","PROVIDER_NAME","createCollectionContext","createContextScope","CollectionProviderImpl","useCollectionContext","collectionRef","current","itemMap","Map","CollectionProvider","scope","React","useRef","COLLECTION_SLOT_NAME","CollectionSlotImpl","CollectionSlot","forwardRef","context","composedRefs","useComposedRefs","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlotImpl","CollectionItemSlot","itemData","useEffect","set","delete","Provider","ItemSlot","useCallback","collectionNode","orderedNodes","Array","from","querySelectorAll","values","sort","a","b","indexOf","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","__scopeRovingFocusGroup","RovingFocusGroupImpl","orientation","loop","dir","currentTabStopId","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","preventScrollOnEntryFocus","groupProps","React.useRef","direction","setCurrentTabStopId","useControllableState","prop","defaultProp","onChange","caller","isTabbingBackOut","setIsTabbingBackOut","React.useState","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","React.useEffect","addEventListener","removeEventListener","jsxRuntimeExports","onItemFocus","React.useCallback","tabStopId","onItemShiftTab","onFocusableItemAdd","prevCount","onFocusableItemRemove","div","tabIndex","style","outline","onMouseDown","composeEventHandlers","onFocus","event","isKeyboardFocus","target","currentTarget","entryFocusEvent","CustomEvent","dispatchEvent","defaultPrevented","items","item","focusable","focusFirst","active","id","onBlur","ITEM_NAME","RovingFocusGroupItem","itemProps","autoId","useId","isCurrentTabStop","span","preventDefault","onKeyDown","key","shiftKey","focusIntent","getDirectionAwareKey","includes","MAP_KEY_TO_FOCUS_INTENT","getFocusIntent","metaKey","ctrlKey","altKey","candidateNodes","reverse","currentIndex","startIndex","array","_","index","length","slice","setTimeout","hasTabStop","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","candidates","preventScroll","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","focus","Root","Item","usePrevious","value","previous","React.useMemo","useMemo","RADIO_NAME","createRadioContext","createRadioScope","RadioProvider","useRadioContext","Radio","__scopeRadio","checked","required","disabled","onCheck","form","radioProps","button","setButton","hasConsumerStoppedPropagationRef","isFormControl","closest","jsxs","role","getState","onClick","isPropagationStopped","stopPropagation","RadioBubbleInput","control","transform","INDICATOR_NAME","RadioIndicator","forceMount","indicatorProps","Presence","present","prevChecked","controlSize","useSize","input","inputProto","HTMLInputElement","prototype","setChecked","Event","call","defaultChecked","position","pointerEvents","opacity","margin","ARROW_KEYS","RADIO_GROUP_NAME","createRadioGroupContext","createRadioGroupScope","createContextScope2","useRovingFocusGroupScope","useRadioScope","RadioGroupProvider","useRadioGroupContext","RadioGroup","React2.forwardRef","__scopeRadioGroup","defaultValue","valueProp","onValueChange","rovingFocusGroupScope","setValue","RovingFocusGroup.Root","Primitive2","RadioGroupItem","isDisabled","radioScope","React2.useRef","useComposedRefs2","isArrowKeyPressedRef","React2.useEffect","handleKeyDown","handleKeyUp","RovingFocusGroup.Item","composeEventHandlers2","click","jsx2","Root2","Item2","GrupoRadio","className","RadioGroupPrimitive.Root","cn","ItemGrupoRadio","RadioGroupPrimitive.Item"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}